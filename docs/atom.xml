<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title></title>
 <link href="http://www.panxw.com/atom.xml" rel="self"/>
 <link href="http://www.panxw.com"/>
 <updated>2019-06-11T03:54:10+00:00</updated>
 <author>
   <name>panxw</name>
   <email>winfirm#outlook.com</email>
 </author>

 
 <entry>
   <title>网易云跟贴8月1日将停止服务，换来必力!</title>
   <link href="http://www.panxw.com/web/neteasy-gentie-stop.html"/>
   <updated>2017-07-06T00:01:01+00:00</updated>
   <id>/web/neteasy-gentie-stop</id>
   <content type="html">&lt;p&gt;晚上浏览博客时，发现网友新的留言，于是点开浏览器收藏下的网易云跟贴（https://gentie.163.com/）准备进后台看看，不料刚进云跟贴首页，就弹出一个大大的8.1日停服通告&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;整个人一惊，这才把留言插件从多说换到网易云跟贴不到2个月吧，说要停服就要停了，这世界怎么了？&lt;/p&gt;

&lt;p&gt;友言尚在，但不支持https，用不了！&lt;/p&gt;

&lt;p&gt;畅言？要备案号，扯淡！&lt;/p&gt;

&lt;p&gt;没啥可用的了？！&lt;/p&gt;

&lt;p&gt;来必力！(https://www.livere.com/)&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>git submodule(子模块)基本用法</title>
   <link href="http://www.panxw.com/git/git-submodule-usage.html"/>
   <updated>2017-06-15T20:05:01+00:00</updated>
   <id>/git/git-submodule-usage</id>
   <content type="html">&lt;p&gt;git提供了submodules机制，可以为当前的git工程引入第三方的git库，而不需要直接将第三库copy过来。当第三方git库有更新时，也能很方便地进行同步。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;下面介绍一下git submoudle命令的基本使用，示例：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;初始化，为当前工程(project)指定一个第三子的git子模块(another)：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd project 
git submodule add git@xxxx:/another.git another
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这段代码会创建.gitmoudles文件记录git子模块信息。并且开始clone子模块的代码到another目录下。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;修改project 目录下的.gitignore文件，使其忽略提交another目录下的文件 ：
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
another/
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p&gt;然后将.gitmodules及.gitignore都提交。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;根据.gitmoudles的记录的初始化&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;当新clone project工程时，完成后是没有another目录的。这时只需在project目录运行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git submodule init
git submodule update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;就能将another的git库clone进another目录了。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;更新git子模块
当子模块有了更新后，我们也可以通过下面的命令更新git子模块。
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd another
git pull
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>批量文件加前缀的shell脚本</title>
   <link href="http://www.panxw.com/linux/batch-rame-scripts.html"/>
   <updated>2017-06-12T20:05:01+00:00</updated>
   <id>/linux/batch-rame-scripts</id>
   <content type="html">&lt;p&gt;批量文件加前缀的shell脚本(rname.sh)：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;cmdfile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rname.sh&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;addr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;bappstore_&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;filename &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ls&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;do
	if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cmdfile&lt;/span&gt; !&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; 
	&lt;span class=&quot;k&quot;&gt;then 
		&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;newfilename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$addr$filename&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#=不能有空格&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$newfilename&lt;/span&gt;
		mv &lt;span class=&quot;nv&quot;&gt;$filename&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$newfilename&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;fi
done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;放入某个目录后，执行./rname.sh即可。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Mac mini接显示器视觉模糊调节</title>
   <link href="http://www.panxw.com/other/macmini-font-adjustfy.html"/>
   <updated>2017-06-02T20:05:01+00:00</updated>
   <id>/other/macmini-font-adjustfy</id>
   <content type="html">&lt;p&gt;使用Mac mini+AOC显示器组合有大半年了，一直感觉字体模糊感很强，视觉上很是不舒服。难道是显示器和主机不匹配？&lt;/p&gt;

&lt;p&gt;今天上网查找了下，发现不止我一个人有这种疑问，找到下面的方法，试完后视觉效果好多了。打开终端，输入：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults -currentHost write -globalDomain AppleFontSmoothing -int 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;重启后可以看到改变后的效果，1是字体大小，还可以设置为2，3，值越大字体的模糊感越强！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>站点服务迁移到了Google Cloud</title>
   <link href="http://www.panxw.com/vps/host-move-to-google-clould.html"/>
   <updated>2017-05-06T20:05:01+00:00</updated>
   <id>/vps/host-move-to-google-clould</id>
   <content type="html">&lt;p&gt;前几天上网无意看到Google Cloud有开通账号赠送300美元(一年使用期限)的活动。这阵子SSH连接班瓦工机子很卡，令人心烦，打算抽空试试Google Cloud。今天周末宅在家正好有空，就将班瓦工上的服务做个整体迁移，包括一个ss VPN服务和目前这个网页访问服务。 &lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;目前我在Google Cloud上启动了一个VM实例，Google湾湾数据中心，3.75G运行内存，10G存储空间，1个公网IP，这个配置大概可以把300美元在1年花掉！我使用了Debian Linux操作系统，在上面开启了一个ss VPN服务，及一个Nginx网页访问服务。&lt;/p&gt;

&lt;p&gt;迁移完成后，我用ss连接上试用一下，爬墙速度还不错；用在线ping工具（http://ping.chinaz.com）对www.panxw.com进行了ping，测试结果还不错。不知博友们打开这个站点时速度如何，方便的话留言告诉我一下，谢谢！&lt;/p&gt;

&lt;p&gt;Google Cloud新开通活动介绍：开通送300美元（365天使用期限），开通时需要提供信用卡扣1美元。当赠送的费用使用完，除非升级为付费账户，不会产生自动扣费。 地址：https://cloud.google.com/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>谈谈我的博客是如何构建与发布的</title>
   <link href="http://www.panxw.com/web/about-blog-architure.html"/>
   <updated>2017-04-22T20:05:01+00:00</updated>
   <id>/web/about-blog-architure</id>
   <content type="html">&lt;h2 id=&quot;1-概述&quot;&gt;1. 概述&lt;/h2&gt;
&lt;p&gt;最近查看博客服务器的请求日志，发现其中有不少wp-admin.php的错误请求，像是在猜测博客的管理后台，大概认为我这个博客也是Wordpress搭建的吧。那今天就谈谈这个博客构建与发布用到的相关技术。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-内容托管&quot;&gt;2. 内容托管&lt;/h2&gt;
&lt;p&gt;博客起初托管在GitPages，后来发现GitHub上免费帐户无法隐藏文章信息，于是转而放在了Bitbucket上。&lt;br /&gt;
在此要特别为Bitbucket点赞，它家的免费个人帐户可建无限量的私有git仓库，并且单个仓库可支持最多5个成员。&lt;/p&gt;

&lt;h2 id=&quot;3-构建与发布&quot;&gt;3. 构建与发布&lt;/h2&gt;
&lt;h4 id=&quot;31-主要用到的技术&quot;&gt;3.1 主要用到的技术&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;git，代码同步工具。&lt;/li&gt;
  &lt;li&gt;Jekyll，站点构建工具。&lt;/li&gt;
  &lt;li&gt;Webhook，自动部署。&lt;/li&gt;
  &lt;li&gt;Node.js，Webhook服务。&lt;/li&gt;
  &lt;li&gt;ssh，加密传输。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;32-流程&quot;&gt;3.2 流程&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;本地文章更新。&lt;/li&gt;
  &lt;li&gt;push更新到远程仓库。&lt;/li&gt;
  &lt;li&gt;远程仓库收到push后，触发一个请求到Webhook上服务。&lt;/li&gt;
  &lt;li&gt;Webhook服务验证参数合法性后，pull最新代码到本地仓库。&lt;/li&gt;
  &lt;li&gt;调用shell脚本，利用Jekyll生成静态站，然后将新站点更新到发布目录。&lt;/li&gt;
  &lt;li&gt;刷新博客查看更新内容。&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;33安全传输&quot;&gt;3.3安全传输&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;git使用SSH+RSA加密传输。&lt;/li&gt;
  &lt;li&gt;Webhook使用https+请求参数验证。&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;4-总结&quot;&gt;4. 总结&lt;/h2&gt;
&lt;p&gt;博客站是纯静态无任何管理后台的，后期我会关闭php等动态网页服务。&lt;br /&gt;
所以请相关人士不要再猜测后台登录入口了，谢谢啦！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>关于再次购买班瓦工VPS的坑！</title>
   <link href="http://www.panxw.com/vps/about-banwagon-traps.html"/>
   <updated>2017-03-15T20:05:01+00:00</updated>
   <id>/vps/about-banwagon-traps</id>
   <content type="html">&lt;p&gt;前些天，眼看手里的一台VPS(班瓦工)就要到期了，正好看到官网上有更新套餐促销，心想手里在用的这台VPS一年来还比较满意，没多想就入手了一台，价格和手里这台相同但可用内存大了一倍。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;然后马上安装系统，及必要软件等试用起来，几天后登录VPS感觉很卡，查看VPS后台控制统计面板时，发现swap空间满了，但物理内存还有大量没使用。&lt;br /&gt;
一查，发现有一个数据库服务耗光了所有swap空间，主要原因还是swap空间太小了，只有64M，数据库服务不多久就能将它爆掉，并且数据库服务无法避免这种情况。&lt;/p&gt;

&lt;p&gt;后来与班瓦工客户沟通，建议换成KVM VPS，可以自行配置swap大小，定制化更好。于是想退掉这个才购买几天的新VPS，几经沟通，然而得到的结果是无法退款，并且想更换成KVM也不行！&lt;br /&gt;
它们的条约是：&lt;strong&gt;只有新注册用户在30天以内试用VPS，不满意可以退款。 对于老用户，只要购买，任何情况下都不给退款，真是太坑了！&lt;/strong&gt;&lt;br /&gt;
不退款我忍，但不能更换其它类型VPS，这也太不人性了吧!&lt;/p&gt;

&lt;p&gt;去年本打算买Linode(可以随时停用VPS，删除VPS且保留余额)，然而招行信用卡付款时没能成功，后来只好选择了班瓦工！&lt;br /&gt;
有v2ex网友说招行信用卡前不久成功购买了Linode，看来我也得考虑换换了！&lt;/p&gt;

&lt;p&gt;经验总结，首次只买一个月班瓦工VPS，先试用后，确认合符自身需求后，再选择按季/半年/年付方式继费不迟！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>VPS服务器环境切换至Node.js</title>
   <link href="http://www.panxw.com/web/nodejs-server-transfer.html"/>
   <updated>2016-08-28T20:05:01+00:00</updated>
   <id>/web/nodejs-server-transfer</id>
   <content type="html">&lt;p&gt;去年购买的VPS，原先是Ngnix(php,tomcat),mysql,sqlite组合，主要用来作静态博客服务，并顺便用作php, java服务学习时测试。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;VPS内存只有256M，算是比较小的了。tomcat7太吃内存，经常要运行个啥的时候，得把它关掉才行。最近正好接触了Node.js，反正不怎么用java作服务开发，于是决定将tomcat换成Node.js的。&lt;/p&gt;

&lt;p&gt;经过一大晚上漫长的摸索，查搜索，反复修改Nginx配置测试，最终将Nginx(php, Node.js), mysql, sqlite环境成功建起来了。&lt;/p&gt;

&lt;p&gt;由于Node.js供一套编写高性能并发Web应用的JavaScript框架，使得js可以在服务器端运行，并自带了服务器(httpServer)的功能。对于html+Node.js的项目，由Node.js可完全搞定。这时Nginx仅用来作多域名反向代理，并将一部分请求转发到Node.js服务上来。&lt;/p&gt;

&lt;p&gt;其它需要混合php/jsp和html的，html等静态文件交给ngnix处理，php或jsp经nginx转发给php-fpm或tomcat处理。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>基于Nginx的Linux VPS 多域名空间配置</title>
   <link href="http://www.panxw.com/web/nginx-multi-domain.html"/>
   <updated>2016-07-25T20:05:01+00:00</updated>
   <id>/web/nginx-multi-domain</id>
   <content type="html">&lt;h4 id=&quot;一从虚拟主机说起&quot;&gt;一、从虚拟主机说起&lt;/h4&gt;

&lt;p&gt;以前，在我印象中VPS都是很贵的，总舍不得花那价钱入手。那时，建站基本都是用虚拟主机，这东西不仅便宜，而且使用很简单，基本不需要我们作何配置。主机商们大都很贼，他们一般都允许在一个虚拟机绑定多个域名，然而这些绑定的域名都是指向同一个空间。当访问这些域名时，大家看到的是同一个网站。那么要想让多个域名访问时，各自到达的网站完全不一样，就得再购买新的虚拟空间来绑定域名了。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;少数主机商虽然有多空间版本的虚拟主机出售，然而这类主机的价格要么很高，要不就是空间数目有限，顶多2-3个。后来，随着云计算技术的发展，建站托管的选择越来越丰富。如今，不仅有新生的AWS，阿里云，腾讯云，及各种paas服务可选，还可以选择VPS，及老牌ISP商的各类空间。当前VPS的价格，再也不是从前高不可及的了，甚至一些VPS商提供的套餐价格比虚拟主机还便宜。&lt;/p&gt;

&lt;h4 id=&quot;二vps好处多&quot;&gt;二、VPS好处多&lt;/h4&gt;

&lt;p&gt;使用VPS的主机的好处是，你可以随意折腾，从所装的系统，到系统上安装什么软件，全部由你决定。操作系统任你选，如windows/linux；网站环境随你搭配，如jsp/php/js, mysql/sqlite, nodejs/tomcat/nginx等；软件安装了可卸载/重装，甚至操作系统也能重装或更换，想怎么玩就怎么玩。最得要的是，我们可以利用Nginx实现多空间的服务器，绑定多个域名，各域名独立访问。&lt;/p&gt;

&lt;p&gt;反之，缺点也是明显的，安装系统，软件，及相关配置也得由你来定，开始接触时可能会带来不少困扰，折腾一阵子后基本能适应，不能适应的建议放弃VPS这条路吧。&lt;/p&gt;

&lt;h4 id=&quot;三linux-nginx配置多空间服务器&quot;&gt;三、Linux Nginx配置多空间服务器&lt;/h4&gt;

&lt;p&gt;我个人钟爱Debian，它够稳定，且适合折腾，因此我的VPS也就是安装的Debian的Linux OS。下面是安装nginx及配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get update
apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;/etc/nginx/nginx.conf文件下添加多个域名空间：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server{
    listen 80;
    server_name www.abc.com;
    root  /var/www/abc.com;
    index index.html index.htm;
    location \ {
      
    }
}

server{
    listen 80;
    server_name www.bcd.com;
    root  /var/www/bcd.com;
    index index.html index.htm;
    location \ {

    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;配置完成后重启Nginx服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/init.d/nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后，只需将www.abc.com, www.bcd.com的解析指向VPS的IP，待解析生效后，我们就可以分别访问abc.com, bcd.com了。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>webpack打包入门教程</title>
   <link href="http://www.panxw.com/react/webpack-basic-usage.html"/>
   <updated>2016-06-28T20:05:01+00:00</updated>
   <id>/react/webpack-basic-usage</id>
   <content type="html">&lt;p&gt;最近学习React Native开发，了解了不少相关知识。顺便尝试了一下webpack，总结了几点其基本用法。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;一单个文件打包&quot;&gt;一、单个文件打包&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpack test.js bundle.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;指定输入文件为test.js，打包输出文件为bundle.js。&lt;/p&gt;

&lt;h4 id=&quot;二多个文件打包&quot;&gt;二、多个文件打包&lt;/h4&gt;

&lt;p&gt;多个js或相关文件时，输入文件指定为js入口文件，如main.js中require了common.js模块:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//main.js
require('style-loader!css-loader!./css/main.css');
require('./common.js');
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;打包命令是：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpace  main.js bundle.js 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;即只需指定入文件文件main.js。&lt;/p&gt;

&lt;h4 id=&quot;三使用相应loader&quot;&gt;三、使用相应loader&lt;/h4&gt;

&lt;p&gt;如require时css使用了css-loader条件，(二)中提到的在require时可指定loader，但不推荐这样做。 使用命令行执行webpack可以通过–module-bind指定loader，如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpack main.js bundle.js --module-bind &quot;css=style-loader!css-loader&quot; --progress --display-modules --display-reasons 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;四配置webpackconfigjs&quot;&gt;四、配置webpack.config.js&lt;/h4&gt;

&lt;p&gt;除了直接在命令行中指定输出，输出等参数来打包，还可以通过设置配置文件来完成。配置webpack打包的config.js文件，然后运行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;webpack --config webpack.config.js
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;来打包。当配置文件为webpack.config.js，可省掉–config选项，直接运行webpack。&lt;/p&gt;

&lt;h4 id=&quot;五配置示例&quot;&gt;五、配置示例&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/webpack.config.js
module.exports={
	entry:{
		index:'./src/main.js',
	},
	output:{
		path:'./dist',
		filename:'bundle.js'
	},
	resolve: {
        extensions: ['', '.js', '.jsx', '.css']
    },
    module: {	
		loaders: [
				{ 
					test: /\.css$/, 
					loader: &quot;style-loader!css-loader&quot; 
				},
				{ 
					test: /\.js$/, 
					loader: 'babel-loader'
				},
				{ 
					test: /\.jsx$/, 
					loader: 'babel?presets[]=react&amp;amp;presets[]=es2015' 
				},
			]
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>React Native 开发环境搭建过程</title>
   <link href="http://www.panxw.com/react/reac-native-envsetup.html"/>
   <updated>2016-06-10T20:05:01+00:00</updated>
   <id>/react/reac-native-envsetup</id>
   <content type="html">&lt;h4 id=&quot;一nodejs&quot;&gt;一、Node.js&lt;/h4&gt;

&lt;p&gt;先安装Git命令行工具，Python2.7，及Node.js运行环境。&lt;/p&gt;

&lt;p&gt;建议更换npm包源，不然npm包加载会很慢！编辑C:\Users\panxw.npmrc，如没有该文件新建即可，加入一行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;registry = https://registry.npm.taobao.org
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h4 id=&quot;二react-native-cli&quot;&gt;二、react-native-cli&lt;/h4&gt;

&lt;p&gt;安装好Node.js后，就可以使用它的包管理命令npm来安装React Native工具包了：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm install -g react-native-cli
npm install -g yarn
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;除了安装了react-native命令行工具，还加装了yarn，可以加快npm install过程。&lt;/p&gt;

&lt;h4 id=&quot;三工程初始化&quot;&gt;三、工程初始化&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native init ReactDemo
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;创建了一个新的React Native工程，工程名为ReactDemo，完成后编译运行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ReactDemo
react-native run-android 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;iOS下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;react-native run-ios
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述命令会最终启动已存在模拟器或真机运行。&lt;/p&gt;

&lt;h4 id=&quot;四真机运行&quot;&gt;四、真机运行&lt;/h4&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;上述生成的包，在真机环境是不能直接运行成功的。先要确保真机与电脑需要处于同一局域网络，然后在App界面按Menu，进入Dev Settings-&amp;gt;DEBUGING&lt;/td&gt;
      &lt;td&gt;Debug server host &amp;amp; port for device，设置IP:port，ip为我们的电脑，port默认为8081。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;再次进入Menu，Reload JS如果能看到首页界面说明成功。&lt;/p&gt;

&lt;h4 id=&quot;五其它&quot;&gt;五、其它&lt;/h4&gt;
&lt;p&gt;如果对Native代码作过修改，那么需要重新运行react-native run-anrodi/run-ios重新生成并安装App。&lt;/p&gt;

&lt;p&gt;如果仅修改了js代码，只需启动本地服务(npm start)，然后重新Reload即可。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>本博客已开启安全(https)浏览</title>
   <link href="http://www.panxw.com/web/site-enable-https.html"/>
   <updated>2016-05-28T20:05:01+00:00</updated>
   <id>/web/site-enable-https</id>
   <content type="html">&lt;p&gt;前几天看到一位博友推荐&lt;a href=&quot;https://buy.wosign.com/free/?lan=cn&quot;&gt;沃通数据免费SSL证书&lt;/a&gt;，有2年免费试用期限。于是申请了一份，给放在&lt;a href=&quot;https://bwh1.net/aff.php?aff=16961&quot;&gt;班瓦工&lt;/a&gt;VPS上的博客添上。  &lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;申请过程很简单，按网站指引操作即可，最后会获得一个含有SSL证书及密钥的压缩文件。里面有Apache, Nginx等服务器对应的证书(.crt)和密钥(.key)文件。&lt;/p&gt;

&lt;p&gt;我的博客是Nginx服务器驱动的，将文件上传服务器后，修改/etc/nginx/nginx.conf，配置博客的server：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
	listen 80; 
	listen 443;
	server_name www.panxw.com; 
	ssl on; 
	ssl_certificate /var/www/server.crt; 
	ssl_certificate_key /var/www/server.key;
	add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;;

	locatin / {
	}
	if ( $scheme = http ) {
		rewrite ^/(.*) https://$server_name/$1 permanent;}
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后保存，重启Nginx服务器：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/init.d/nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再次打开博客&lt;a href=&quot;http://www.panxw.com&quot;&gt;http://www.panxw.com&lt;/a&gt;，浏览器链接自动跳转到了&lt;a href=&quot;https://www.panxw.com&quot;&gt;https://www.panxw.com&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;至此，本博客的安全浏览开启成功！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>php加入access数据库支持方法</title>
   <link href="http://www.panxw.com/web/php-get-access-db.html"/>
   <updated>2016-04-16T20:05:01+00:00</updated>
   <id>/web/php-get-access-db</id>
   <content type="html">&lt;p&gt;要在linux的php环境中要访问access数据库，实属无赖。度娘一下找到了办法：&lt;/p&gt;

&lt;p&gt;1.安装php的odbc支持&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install php5-odbc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;p&gt;2.用php探针检测是否安装成功&lt;/p&gt;

&lt;p&gt;建一个测试页面：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
phpinfo();
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;访问测试页面，查看ODBC Support是否Enable了。&lt;/p&gt;

&lt;p&gt;3.使用odbc连接access数据库php代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php 
$db = new PDO(&quot;odbc:driver={microsoft access driver (*.mdb)};
              dbq=&quot;.realpath(&quot;data.mdb&quot;)) 
              or die(&quot;Connect Error&quot;);
$rs = $db-&amp;gt;query('select * from user');
print &quot;&amp;lt;pre&amp;gt;&quot;;
print_r($rs-&amp;gt;fetchAll());
print &quot;&amp;lt;/pre&amp;gt;&quot;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>阿里弹性Web托管屏蔽IP的.htaccess设置</title>
   <link href="http://www.panxw.com/web/block-ip-by-htaccess.html"/>
   <updated>2016-04-10T20:05:01+00:00</updated>
   <id>/web/block-ip-by-htaccess</id>
   <content type="html">&lt;p&gt;几个站都被几个来自南京的IP恶意访问了。其中一个为阿里弹性Web托管，提工单问技术支持找到了方法。.htaccess加入设置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;RewriteEngine On
##Block ip
RewriteCond %{http:X-Forwarded-For} (180.97.106.161|180.97.106.162|180.97.106.36|180.97.106.37) [NC]
RewriteRule (.*) – [F]  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;
&lt;p&gt;技术支持提供的另外几个方案，在弹性WEB托管上都无效：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;order allow,deny
deny from 192.168.0.2
deny from 192.168.0.3
deny from 192.168.0.4
allow from all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;http://www.biaodianfu.com/block-ip-from-accessing-website-using-htaccess.html&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>谈谈我的Jekyll建站之旅</title>
   <link href="http://www.panxw.com/web/my-jekyll-journey.html"/>
   <updated>2016-03-15T20:05:01+00:00</updated>
   <id>/web/my-jekyll-journey</id>
   <content type="html">&lt;p&gt;大概2012年起，第一次接触jekyll。照着网友们的攻略开始了jekyll的博客之旅。&lt;/p&gt;

&lt;p&gt;为了使jekyll跑在自己的windows机子上，差点把人搞吐血了，一度快到放弃的那一刻。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;感谢有了google这样类伟大的搜索工具，后来总算把jekyll跑起来了。V2EX上有网友总结过一句话，“珍爱生命，Windows下远离ruby”，当时觉得太有道理了。不过经过几年发现，目前jekyll环境搭建顺利多了。&lt;/p&gt;

&lt;p&gt;回头来看，其实单想在Github上建个站，能写博客很容易。先去jekyll项目主页上找到Sites链接，点进去挑个钟意的模板，fork一份到自己github账户，改下项目名字，修改或删除原有的配置或文章，新建自己的博文，按格式用markdown书写文章，最后保存就行了。gitpage会自动构建站点，不用自己在本机安装jekyll就全能搞定！&lt;/p&gt;

&lt;p&gt;但是，本地安装也是有意义的，一则可以预览效果，有错误及时调整；二来如果不想公开原文件，可以只将生成好的静态文件提交到github；另外可以把jekyll作为自己的建站工具，随意折腾！&lt;/p&gt;

&lt;p&gt;最后，展示下最近改版后的博客。http://www.panxw.com，页面底部有模板地址的github链接，欢迎交流探讨！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>利用CloudFront为Godaddy主机上的网站加速</title>
   <link href="http://www.panxw.com/web/fasten-godaddy-by-cloudfront.html"/>
   <updated>2016-03-06T20:05:01+00:00</updated>
   <id>/web/fasten-godaddy-by-cloudfront</id>
   <content type="html">&lt;p&gt;最近将博客放Godaddy主机上来了，然而国内用户访问时却超级慢。慢到什么程度？打开一个简单的html静态页面可能要3-5s，甚至时常出现请求超时的现象。通过http://ping.chinaz.com测试发现，各地的ping值大多在400ms以上，并且每次都会出现一批超时节点，放眼望去基本全是红的！  &lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;面对Godaddy主机访问慢的问题，大家首先可能想到利用CDN来提速。然而提供CDN加速服务的国内服务商，都无一例外要求域名有备案，否则顶多也就让你使用海外加速节点，经实际体验实际效果并不理想。对于放在Godaddy主机上的站来说，没有备案这一说，Godaddy根本就不会有这种服务。后来想到了去年使用过一段时间的AWS，记得上面有内容分发的服务。于是找到了AWS的CloudFront，了解其使用方法与计价规则之后，趁去年申请的一年免费体验服务还没到期赶紧试一把。&lt;/p&gt;

&lt;p&gt;给网站添加CloudFront内容分发的配置过程并不复杂，但有个技巧，举例说明，比如我准备给我的个人博客作分发，公开访问地址是www.panxw.com，那么要这样操作：&lt;br /&gt;
1.Godaddy上添加blogserver.panxw.com的附加域，将博客部署在这个目录下。修改panxw.com域名解析，将blogserver的A记录指向Godaddy虚拟主机IP。&lt;br /&gt;
2.在AWS的CloudFront面板下新建分发（Create Distribution)，将Origin的值设置为blogserver.panxw.com，CNAMEs的值设置为博客的公开地址，即www.panxw.com。&lt;br /&gt;
3.Distribution新建完成后会生成一个诸如xxxxx.cloudfront.net的Domain Name。修改panxw.com域名解析，添加一条CNAME www，将其值设置为xxxxx.cloudfront.net。&lt;br /&gt;
这样一来当访问www.panxw.com时，实际是到xxxxx.cloudfront.net地址来取内容，而CloudFront则从blogserver.panxw.com处将最原始内容缓存到xxxxx.cloudfront.net处来。&lt;/p&gt;

&lt;p&gt;待Distribution状态变为Deployed后，就可以通过www.panxw.com来检验实际加速效果了。经实验发现，再次ping值大多在200ms以内，访问页面时加载速度明显提升。结论是：CloudFront的内容分发服务，有效地提升部署在Godaddy主机上网站的用户访问体验，值得一试！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll输出特定栏目文章列表的方法</title>
   <link href="http://www.panxw.com/web/jekyll-column-list-output.html"/>
   <updated>2016-03-05T20:05:01+00:00</updated>
   <id>/web/jekyll-column-list-output</id>
   <content type="html">&lt;p&gt;我们可以通过以下几步来输出某个栏目下的文章列表。&lt;/p&gt;

&lt;h4 id=&quot;1新建一个分类文件xxxmd&quot;&gt;1.新建一个分类文件xxx.md&lt;/h4&gt;
&lt;p&gt;xxx.md用于显示”XXX“栏目下的文章列表，其内容如下：&lt;br /&gt;
&lt;img src=&quot;/assets/column_list_code.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;
因jekyll模板代码不能显示在代码块中，因此用图来显示，代码可从&lt;a href=&quot;https://github.com/panxw/jekyll-theme-codes&quot;&gt;https://github.com/panxw/jekyll-theme-codes&lt;/a&gt;找到！&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;2在写文章时指定category为xxx&quot;&gt;2.在写文章时指定category为XXX&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post 
title: &quot;hello world&quot; 
category: XXX
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3分类链接时使用&quot;&gt;3.分类链接时使用&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;a href=&quot;xxx.html&quot;&amp;gt;XXX&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4参考jekyll模板&quot;&gt;4.参考Jekyll模板&lt;/h4&gt;
&lt;p&gt;其实，本站的几个栏目就是基于这个思路搭建的，如Android开发、Web建站、软件编程等。&lt;br /&gt;
本站所用模板地址：&lt;a href=&quot;https://github.com/panxw/panxw.github.com&quot;&gt;https://github.com/panxw/panxw.github.com&lt;/a&gt;&lt;br /&gt;
如有相关不明白的问题，可在文章后面直接留言给我！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ubuntu下Ruby1.9/2.0版本切换</title>
   <link href="http://www.panxw.com/web/ububtu-ruby2-install.html"/>
   <updated>2016-03-02T20:05:01+00:00</updated>
   <id>/web/ububtu-ruby2-install</id>
   <content type="html">&lt;p&gt;Ubuntu 14.4以上，即便是通过:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ruby2.0 ruby2.0-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;指定为2.0版，也会同时安装1.9版本，且系统默认使用1.9版。&lt;/p&gt;

&lt;p&gt;目前，安装Jekyll会提示使用Ruby&amp;gt;=2.0，那么要使用ruby2.0怎么办？有办法，切换一下版本。&lt;!-- more --&gt;建立一个shell脚本，switchruby2.0.sh，内容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/bin 
ln -sf ruby2.0 ruby 
ln -sf gem2.0 gem 
ln -sf erb2.0 erb 
ln -sf irb2.0 irb 
ln -sf rake2.0 rake 
ln -sf rdoc2.0 rdoc 
ln -sf testrb2.0 testr 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后添加用户执行权限：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chmod u+x  switchruby2.0.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;然后：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ./ switchruby2.0.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接着再更新下gem:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem update --system
gem pristime --all
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;完成后通过 ruby -v确认下当前使用的ruby版本。&lt;br /&gt;
等切换到2.0后，再执行sudo apt-get install jekyll，就会成功了。&lt;/p&gt;

&lt;p&gt;那么，用着有需要切换回1.9怎么办？同理建立一个shell脚本switchruby1.9.sh，内容见下面：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr/bin/
ln -sf ruby1.9.1 ruby
ln -sf gem1.9.1 gem
ln -sf erb1.9.1 erb
ln -sf irb1.9.1 irb
ln -sf rake1.9.1 rake
ln -sf rdoc1.9.1 rdoc
ln -sf testrb1.9.1 testrb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;保存，其余操作同切换到2.0.&lt;/p&gt;

&lt;p&gt;参考：http://www.kaijia.me/2014/08/ubuntu-14-04-switch-defaults-to-ruby-2-0/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>试用Godaddy虚拟主机总结</title>
   <link href="http://www.panxw.com/web/godaddy-try-summary.html"/>
   <updated>2016-02-28T20:05:01+00:00</updated>
   <id>/web/godaddy-try-summary</id>
   <content type="html">&lt;p&gt;上周在没做多少调查的情况下申请了Godaddy的豪华版虚拟主机，用了后整个人不爽了。&lt;/p&gt;

&lt;p&gt;正值促销价格方面极其诱人，且一机可多域名，心想手里几个没使用的域名有着落了。付完款，前几天没空，周末立马对空间测试，cPanel面板上手容易，多域名也还好，但一测试网站速度悲剧了，赶紧ping，响应都在500ms左右。卧槽，这访问不慢才怪呢！&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;上网一查，这类坑早有人踩过了。对Godaddy的意见差不多统一是，对海外站影响不大，管理操作效率受到影响的，还能忍忍。而如果是国内站，不备案的不二之选是选香港空间，相当于双线主机，速度快但价格偏高了点儿。&lt;/p&gt;

&lt;p&gt;时间过了一周，退款比较难了，而且流程复杂，只能自行想法子改善了。后来了解到百度云加速，Inconpusa等CDN网站加速服务提供商。先试用了Inconpusa，加速后静态类页面访问速度和ping延时都比直接Godaddy有改善，但谈不上十分理想；后来试用了百度云加速，其国内节点多，全球节点也不少，加速效果不错，遗憾的是域名没备案只能使用海外节点，这样一来效果比Inconpusa好不了多少了。&lt;/p&gt;

&lt;p&gt;百度云加速让人颇为尴尬的是，我等主机本来就在海外，人家国度里没有备案一说，因国内访问速度慢才用到加速，百度云加速对没备案的域名加速只提供海外节点，这这还是回到海外访问去了嘛！&lt;/p&gt;

&lt;p&gt;Godaddy这折腾的让人蛋疼！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>CloudFlare与Incapsula免费版CDN实测对比</title>
   <link href="http://www.panxw.com/web/cloudflare-vs-incapsula-cdn.html"/>
   <updated>2016-02-28T20:05:01+00:00</updated>
   <id>/web/cloudflare-vs-incapsula-cdn</id>
   <content type="html">&lt;p&gt;最近要给龟速的Godaddy网站主机加个访问加速器，对站友们讨论较多的几家CND提供商的免费版进行了测试，主要有百度云加速（国内），CloudFlare及Incapsula。本文只对CloudFlare与Incapsula两家免费版本实际效果进行测试。之所以忽略掉百度云加速，是因为作为一个放在Godaddy主机上的网站，域名没有备案一说，而百度去加速对没备案网站也是使用CloudFlare公司的节点加速的。&lt;br /&gt;
&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;1测试方法&quot;&gt;1.测试方法：&lt;/h4&gt;
&lt;p&gt;用两个域名，分别在CloudFlare与Incapsula配置免费版的CDN加速套餐，然后待节点生效后，通过 Ping测试工（http://ping.chinaz.com）对两个域名进行测试，测试线路包括电信，多线，联通，移动，海外。每组进行多轮测试，各选取某轮的测试数据进行对比。&lt;/p&gt;

&lt;h4 id=&quot;2测试结果&quot;&gt;2.测试结果：&lt;/h4&gt;
&lt;p&gt;使用CloudFlare加速的实测数据：&lt;br /&gt;
&lt;img src=&quot;/assets/test_result_cloudflare.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用Incapsula加速的实测数据：&lt;br /&gt;
&lt;img src=&quot;/assets/test_reuslt_incapsula.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过上面的数据各项指标可以看到，CloudFlare的数据优于Incapsula。另外通过测试两家的加载速度，其结果也是CloudFlare优于Incapsula。&lt;/p&gt;

&lt;h4 id=&quot;3总结&quot;&gt;3.总结&lt;/h4&gt;
&lt;p&gt;这里没有列出各测试的具体数据，我这里观察的总结是，两家的大部分测试结果都在200-300ms内，而CloudFlare的Ping值落在200ms以内的多于Incapsula，300ms以内的也多于Incapsula。总体而言，CloudFlare的加速效果略胜于Incapsula。&lt;/p&gt;

&lt;p&gt;如果域名有备案，推荐直接使用云加速，可获得较快的国内速度与海外的速度。&lt;br /&gt;
如果没备案，实际发现百度云加速没有直接使用Cloud好。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android TV开发中特定焦点定位</title>
   <link href="http://www.panxw.com/android/tv-focus-points.html"/>
   <updated>2015-09-12T20:05:01+00:00</updated>
   <id>/android/tv-focus-points</id>
   <content type="html">&lt;p&gt;TV界面开发中，焦点处理有时候不能完全依赖系统。&lt;br /&gt;
焦点从一个View到另一个View的过程中，会有一个完整的KeyPress过程（KeyEvent.ACTION_DOWN和KeyEvent.ACTION_UP），前一个焦点所在ViewGroup可截获KeyEvent.ACTION_DOWN， 而后一个焦点所在ViewGroup可截获KeyEvent.ACTION_UP。&lt;br /&gt;
&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;当需要将焦点定位到某个View时，我们就要在ViewGroup/Activity的dispatchKeyEvent方法中对事件监听，并在KeyEvent.ACTION_DOWN动作时，调用目标View的requestFocus()，再返回true。&lt;br /&gt;
在KeyEvent.ACTION_DOWN事件来临手动定位下一个焦点，是因为KeyEvent.ACTION_UP事件来临时系统已完成焦点处理，再处理已不能达到所需效果了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Ubuntu下tomcat+nginx服务器架设小记</title>
   <link href="http://www.panxw.com/web/ubuntu-nginx-java-php-serve.html"/>
   <updated>2015-08-25T20:05:01+00:00</updated>
   <id>/web/ubuntu-nginx-java-php-serve</id>
   <content type="html">&lt;p&gt;操作环境：一台Vagrant+Ubuntu 14.4 Lts box虚拟机。&lt;/p&gt;

&lt;p&gt;实现目标：ngnix实现静态，动态分离。静态ngnix代理，动态代理给fastcgi(php)，tomcat。域名解析到CNAME/ip，让nginx识别挂载到不同目录。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;1系统软件源更新&quot;&gt;1.系统软件源更新&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update //更新source.list
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2安装jdk&quot;&gt;2.安装jdk&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install openjdk-7-jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果有多个java版本，需要指定：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-alternatives --config java
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3安装tomcat&quot;&gt;3.安装tomcat&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install tomcat7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这一步输入http://localhost:8080可以看到tomcat的欢迎页面了。&lt;/p&gt;

&lt;p&gt;插一句，部署war包：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp abc.war   /var/www/
cd /var/www
sudo jar -xvf abc.var
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4安装nginx&quot;&gt;4.安装nginx&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;到这一步lynx http://localhost可以看到nginx欢迎页了。&lt;/p&gt;

&lt;h4 id=&quot;5mysql安装&quot;&gt;5.mysql安装&lt;/h4&gt;
&lt;p&gt;输入mysql有提示多个选择可安装，这里安装常用的。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install mysql-server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装mysql-client-core-5.6（或5.5)容易报下面的错误。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2)
# ln -s /var/run/mysqld/mysqld.sock /tmp/mysql.sock
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;6php&quot;&gt;6.php&lt;/h4&gt;
&lt;p&gt;安装php（只用下面两个就够与nginx配合使用了)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install php5-cli php5-fpm
mysql -u root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;解决Java无法通过JDBC连接到Mysql的问题，需要添加相应驱动。&lt;br /&gt;
下载驱动，如：mysql-connector-java-5.0.6-bin.jar&lt;br /&gt;
放到相应用目录，然后考备到java及tomcat的lib目录下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp mysql-connector-java-5.0.6-bin.jar /usr/share/java/lib
sudo cp mysql-connector-java-5.0.6-bin.jar /usr/share/tomcat7/lib
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;重启下tomcat。&lt;/p&gt;

&lt;h4 id=&quot;7tomcat与nginx配置&quot;&gt;7.tomcat与nginx配置&lt;/h4&gt;
&lt;p&gt;每次修改配置相应服务要重启，命令如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo /etc/init.d/tomcat7 restart
sudo /etc/init.d/nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看服务错误或访问日志：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cat /var/log/nginx/access.log(error.log)
sudo cat /var/log/tomcat7/access.log(error.log)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;8配置修改举例&quot;&gt;8.配置修改举例：&lt;/h4&gt;
&lt;p&gt;编辑/etc/tomcat7/server.xml Host节点下加入，让ngnix可访问到tomcat。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &amp;lt;Context path=&quot;&quot; docBase=&quot;/var/www&quot; reloadable=&quot;true&quot;/&amp;gt; 
    &amp;lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;
           prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;
           pattern=&quot;%h %l %u %t &amp;amp;quot;%r&amp;amp;quot; %s %b&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;编辑/etc/nginx/nginx.conf，加入：&lt;/p&gt;

&lt;p&gt;(a)只有一个server时：静态，php, jsp，全搞定！&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;##
# Virtual Host Configs
##
server {
        listen 80;
        charset utf-8;
        root /var/www;
        index index.html index.htm index.php index.jsp;
        #server_name  ;
        location / {   #处理静态html
        }

        location ~.php$ { #处理动态php
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                fastcgi_index index.php;
				fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }

        location ~\.(jsp|do|jspx)?$ {#处理动态java，交给tomcat
                index index.jsp index.do;
                proxy_pass http://localhost:8080;
        }

        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;#下面两项导入不要，禁止跳到nginx默认首页。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include /etc/nginx/conf.d/*.conf;
#include /etc/nginx/sites-enabled/*;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(b)处理多个server时：静态，php,  java分别处理，实现多域名绑定：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;##
# Virtual Host Configs
##
server {#运行html
    listen 80;
    charset utf-8;
    root /var/www;
    index index.php index.html index.htm;
    server_name www.abc.com;
    location / {
    }
}

server { #运行java
    listen 80;
    charset utf-8;
    root /var/www/java;
    index index.jsp index.do index.html index.htm;
    server_name java.abc.com;
    location ~\.(jsp|do|jspx)?$ {
            proxy_pass http://localhost:8080;
    }
}

server { #运行php
    listen 80;
    charset utf-8;
    root /var/www/php;
    index index.php index.html index.htm;
    server_name php.abc.com;
    location ~.php$ {
            fastcgi_pass unix:/var/run/php5-fpm.sock;
            fastcgi_index index.php;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;#下面两项导入不要，禁止跳到nginx默认首页&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include /etc/nginx/conf.d/*.conf;
#include /etc/nginx/sites-enabled/*;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Vagrant入手记</title>
   <link href="http://www.panxw.com/linux/the-vagrant-trail.html"/>
   <updated>2015-08-20T20:05:01+00:00</updated>
   <id>/linux/the-vagrant-trail</id>
   <content type="html">&lt;p&gt;总的来说，Vagrant跑虚拟机的好处有：启动快速，轻量，占内存小。缺点可是能是全命令行模式，没怎么接触过的头大。下面就说说怎么让Vagrant跑起来。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;1首先是安装virtualbox-vargrant程序&quot;&gt;1.首先是安装VirtualBox, vargrant程序&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://www.vagrantup.com/
https://www.virtualbox.org/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;安装简单，不停下一步。&lt;/p&gt;

&lt;h4 id=&quot;2安装box&quot;&gt;2.安装box&lt;/h4&gt;
&lt;p&gt;VirtualBox和Vagrant都就绪后，上https://atlas.hashicorp.com/boxes/search找box安装。&lt;br /&gt;
比如我选择的这个https://atlas.hashicorp.com/ubuntu/boxes/trusty64/versions/20151019.0.0，页面有安装命令。&lt;br /&gt;
cmd进d盘建立Vagrant工作目录：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir vgrant
cd vagrant
vagrant init ubuntu/trusty64
vagrant up --provider virtualbox
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3操作&quot;&gt;3.操作&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd vagrant
vagrant up//启动虚拟机
vagrant halt//关闭虚拟机
vagrant suspend//暂停虚拟机
vagrant resume//恢复暂停的虚拟机
vagrant reload //重启
vagrant destroy//删除虚拟机，慎用
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4securitycrt连接安装&quot;&gt;4.SecurityCRT连接安装&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1:2222
vagrant/vagrant
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;5软件安装如&quot;&gt;5.软件安装，如：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install xxxx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;6网络配置&quot;&gt;6.网络配置&lt;/h4&gt;
&lt;p&gt;修改Vagrantfile可配置网络，参考(http://ninghao.net/blog/2079)&lt;br /&gt;
放开public_network，private_network，forwarded_port实现不同目的。&lt;/p&gt;

&lt;p&gt;完工！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>一步一步在AWS EC2(Ubuntu)上搭建git服务</title>
   <link href="http://www.panxw.com/git/git-server-on-aws.html"/>
   <updated>2015-08-06T20:05:01+00:00</updated>
   <id>/git/git-server-on-aws</id>
   <content type="html">&lt;p&gt;为实现下面命令行的功能，折腾了多天，终于成功在AWS的EC2(Ubuntu)机子上搭了个私家git服务。本文不讨论SSH, RSA加解密概念之类，只把在AWS EC2(Ubuntu)上搭建git服务的过程记录下来，方便以后用到时查询或供大家参考。&lt;!-- more --&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@ip:/home/git/project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;1准备工作&quot;&gt;1.准备工作&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install git #安装git服务

sudo useradd -m git  #添加git用户
sudo passwd git #修改git用户密码
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;为安全起见，最好禁止用户名git的用户使用密码登录，编辑/etc/passwd这个文件，在文件末尾可以找到类似这样的行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1000:1000::/home/git:/bin/sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;将bin/sh改为/usr/bin/git-shell，这样一来只能通过密钥登录git帐户了。&lt;/p&gt;

&lt;h4 id=&quot;2密钥配置&quot;&gt;2.密钥配置&lt;/h4&gt;
&lt;p&gt;客户端生成密钥：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh-keygen -t RSA
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;命令生成key密钥，一个私钥id_rsa，对应一个公钥id_rsa.pub， id_rsa自己存放，id_rsa.pub要报备git服务器。&lt;br /&gt;
Windows中直接生成的密钥名文件名必须是id_rsa，不能像Linux中可以自行配置。而Linux中需要在~/.ssh/config中配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Host
    HostName &amp;lt;ip&amp;gt;
    User git
    IdentityFile ~/.ssh/id_rsa
    #PreferredAuthentications publickey
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;生成的公钥文件id_rsa.pub，报备git服务器，即加入到git用户的authorized_keys文件中去。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#以EC2的默认用户ubuntu登录
sudo chown git:ubuntu /home/git/.ssh/authorized_keys #将authorized_keys权限临时修改到ubuntu用户下
sudo cat id_rsa.pub &amp;gt;&amp;gt; /home/git/.ssh/authorized_keys #追加id_rsa.pub到get用户的authorized_keys
sudo chown git:git /home/git/.ssh/authorized_keys #将authorized_keys权限改回git用户下
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3创建git项目&quot;&gt;3.创建git项目&lt;/h4&gt;
&lt;p&gt;在/home/git/目录下新建git项目并初始化：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir project.git
cd project.git
git --bare init
cd ..
sudo chown git:git project
sudo chmod 755 project -R
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4验证&quot;&gt;4.验证&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@ip:/home/git/project.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果成功，被clone的rep将会出现在本地了。&lt;/p&gt;

&lt;h4 id=&quot;5参考&quot;&gt;5.参考：&lt;/h4&gt;
&lt;p&gt;http://chiyx.iteye.com/blog/1872447&lt;br /&gt;
http://www.open-open.com/lib/view/open1356608472385.html&lt;br /&gt;
https://dericteong.wordpress.com/2013/06/12/setup-git-server-in-amazon-ec2/&lt;br /&gt;
http://www.lostdecadegames.com/goodbye-github-hello-aws/&lt;br /&gt;
http://my.oschina.net/aulphar/blog/201813&lt;br /&gt;
http://blog.chinaunix.net/uid-28621021-id-3487552.html&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>C语言Base64输出buffer大小计算</title>
   <link href="http://www.panxw.com/program/base64-outbuffer-length.html"/>
   <updated>2015-06-30T20:05:01+00:00</updated>
   <id>/program/base64-outbuffer-length</id>
   <content type="html">&lt;h4 id=&quot;一base64编码过程&quot;&gt;一、Base64编码过程&lt;/h4&gt;
&lt;p&gt;将3字节(3×8=24)分块成4字节(4×6=24,高位补0)，即3个字节输入转换成4个字节输出。因此，输入字符串长度如果不是3的整数倍，则需要在末尾补1或2个=。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二c语言实现计算输出bufferchar-大小计算方法&quot;&gt;二、C语言实现计算输出buffer(char *)大小计算方法&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/**
 * 取补的'='长度
 */
unsigned int get_base64_output_padd_len(const unsigned char * input) {
	const unsigned char *ptr = input;
	ptr = ptr + strlen(input);
	unsigned int pad_len = 0;
	unsigned int i = 0;
	while (i &amp;lt; 3) { //补'='的长度只可能是1或2
		if (*ptr == 61) {
			pad_len++;
		}
		ptr--;
		i++;
	}
	return pad_len;
}

/**
 * 获取base64输出buffer所需的长度
 */
unsigned int get_base64_output_len(const unsigned char * input,
		unsigned int type) {
	unsigned int count = 0;
	if (type == 0) { //根据原始输入字符串计算编码后字符串的长度
		unsigned int len = strlen(input);
		unsigned int pad = (len % 3 == 0) ? 0 : (3 - len % 3);
		count = ((len + pad) * 8 / 6);
	} else { //根据编码后的字符串计算编码前字符串的长度（补位后的）
		const unsigned char *ptr = input;
		unsigned char tmp;
		unsigned int total = 0;
		while ((tmp = *ptr) != '\0') { //过滤'\n'
			if (tmp != '\n') {
				total++;
			}
			ptr++;
		}
		unsigned int pad_len = get_base64_output_padd_len(input);
		count = (total * 6 / 8) - pad_len;
	}
	return count;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;三编码中有n字符的情况&quot;&gt;三、编码中有\n字符的情况&lt;/h4&gt;
&lt;p&gt;JAVA base64的某些实现版本，编码后的字符串中可能带有”\n”字符（方便输出时查看），getOutputLen就不再准确了，需要过滤掉”\n”字符。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	System.out.println(&quot;getOutputLen:&quot;+getOutputLen(input));//根据原始输入字符串计算编码后字符串的长度为1144
	String result = Base64.encodeToString(input.getBytes(&quot;UTF-8&quot;), 0);//对字符串按Base64编码
	System.out.println(&quot;result Len:&quot;+result.length());//实际的result长度发现为1160
	result=result.replaceAll(&quot;\n&quot;, &quot;&quot;);//因为它附加了\n字符，需要滤\n字符
	System.out.println(&quot;real result Len:&quot;+result.length());//输出1144，这就对了！
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>推荐几个不错的VPS主机</title>
   <link href="http://www.panxw.com/vps/good-vps-list.html"/>
   <updated>2015-06-28T20:05:01+00:00</updated>
   <id>/vps/good-vps-list</id>
   <content type="html">&lt;h4 id=&quot;搬瓦工299起&quot;&gt;搬瓦工(2.99$起)&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://bwh1.net/aff.php?aff=16961&quot;&gt;https://bandwagonhost.com&lt;/a&gt;&lt;br /&gt;
选Los Angeles机房，本博客就是放这家的。&lt;/p&gt;

&lt;h4 id=&quot;linode10起&quot;&gt;Linode(10$起)&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://www.linode.com/?r=6a1d2020e95d84a5d1e6706a659499b1cc0f28bd&quot;&gt;https://www.linode.com&lt;/a&gt;&lt;br /&gt;
选日本机房，要绑定信用卡（招行目前付不了）。&lt;/p&gt;

&lt;h4 id=&quot;digitalocean5起&quot;&gt;DigitalOcean(5$起)&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://digitalocean.com&quot;&gt;https://digitalocean.com&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;vultr5起&quot;&gt;Vultr(5$起)&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://www.vultr.com/?ref=6879661&quot;&gt;http://www.vultr.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Android App安全性加强策略</title>
   <link href="http://www.panxw.com/android/android-app-safe.html"/>
   <updated>2015-05-13T20:05:01+00:00</updated>
   <id>/android/android-app-safe</id>
   <content type="html">&lt;p&gt;从以下几个方面来考虑：&lt;br /&gt;
1.重要数据的访问，如本地文件及网络接口需加密及签名检验，网络请求用POST，有HTTPS更好。&lt;br /&gt;
2.加解密，签名，验签等算法以JNI实现，并作相应混淆处理。&lt;br /&gt;
3.最后一步，使用第三方apk加固，如梆梆加固或爱加密，推荐前者。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;链接：&lt;br /&gt;
http://www.csdn.net/article/2013-06-26/2815995-Android-apk-bangcle&lt;br /&gt;
http://www.bangcle.com/&lt;br /&gt;
http://www.ijiami.cn/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Java线程模型的规则与共享变量可见性</title>
   <link href="http://www.panxw.com/program/java-thread-model.html"/>
   <updated>2015-05-11T20:05:01+00:00</updated>
   <id>/program/java-thread-model</id>
   <content type="html">&lt;h4 id=&quot;一线程模型规则&quot;&gt;一、线程模型规则&lt;/h4&gt;
&lt;p&gt;1、线程对所有共享变量的操作必须在各自工作内存中进行，不能直接从主内存中读写。&lt;br /&gt;
2、不同线程之间无法直接访问其它线程工作内存中的变量，线程间变量值的传递需要通过主内存来完成。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二共享变量可见性synchronized与volatile&quot;&gt;二、共享变量可见性：synchronized与volatile&lt;/h4&gt;
&lt;p&gt;synchronized&lt;br /&gt;
必须使用同一把锁，可使变量相关操作原子性。&lt;br /&gt;
a,线程解锁前，会将工作内存中共享变量的最新值刷新到主内存中。&lt;br /&gt;
b,线程获得锁之前，将从主内存中读取共享变量的最新值，更新到工作内存中。&lt;/p&gt;

&lt;p&gt;volatile：&lt;br /&gt;
通过加入内存屏障和禁止重排序来实现。不保证volatile变量相关操作原子性。&lt;br /&gt;
a,对volatile变量写操作时，对写操作后加入store屏障指令。&lt;br /&gt;
b,对volatile变量读操作时，对读操作后加入store屏障指令。&lt;/p&gt;

&lt;p&gt;参考：http://imooc.com/learn/352&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>基于bitbucket和github构建私有+开源一体的代码中心</title>
   <link href="http://www.panxw.com/git/git-multi-remote.html"/>
   <updated>2015-05-09T20:05:01+00:00</updated>
   <id>/git/git-multi-remote</id>
   <content type="html">&lt;h4 id=&quot;一基于bitbucket和github打造代码中心&quot;&gt;一、基于bitbucket和github打造代码中心&lt;/h4&gt;
&lt;p&gt;即private项目仅托管在bitbucket上，而开源项目，除了托管bitbucket外，还push到github上去。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二git添加多个远程库操作&quot;&gt;二、git添加多个远程库操作&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd repo
git remote add origin &amp;lt;bitbucket git address&amp;gt;
git remote set-url --add origin &amp;lt;github git address&amp;gt;
git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;最后一句一次性push到2个库里面了&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>写给大家看的设计书[书摘]</title>
   <link href="http://www.panxw.com/read/read-design-principle-book.html"/>
   <updated>2015-03-01T20:05:01+00:00</updated>
   <id>/read/read-design-principle-book</id>
   <content type="html">&lt;p&gt;写给大家看的设计书，作者：Robin Williams[美]。&lt;br /&gt;
附PDF下载：&lt;a href=&quot;http://pan.baidu.com/s/1mgDWCuG&quot;&gt;http://pan.baidu.com/s/1mgDWCuG&lt;/a&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;一前言部分&quot;&gt;一、前言部分&lt;/h4&gt;
&lt;p&gt;复杂的设计原则在这里被浓缩为4个词：亲密性、对齐、重复和对比。…如果遵循了这些基本原则，你的设计看上去会更专业、更有条理、更统一，也更有趣。&lt;/p&gt;

&lt;h4 id=&quot;二4大基本设计原则&quot;&gt;二、4大基本设计原则&lt;/h4&gt;
&lt;p&gt;每一个优秀的设计中都应用了这些设计原则，而各个原则也是相互关联的。&lt;/p&gt;

&lt;p&gt;原则一：亲密性（Proximity）&lt;br /&gt;
Robin亲密性原则简述：亲密性即相关的组织在一起。&lt;br /&gt;
彼此相关的项应当靠近，归组在一起。如果多个项相互之间存在很近的亲密性，它们就会成为一个视觉单元，而不是多个孤立的元素。这有助于组织信息，减少混乱，为读者提供清晰的结构。&lt;/p&gt;

&lt;p&gt;原则二：对齐（Alignment）&lt;br /&gt;
Robin对齐原则简述：任何元素都不能在页面上随意安放。每一项都应当与页面上的某个内容存在某种视觉联系。&lt;br /&gt;
任何东西都不能在页面上随意安放。每个元素都应当与页面的另一个元素有某种视觉联系。这样能建立一种清晰、精巧而且清爽的外观。&lt;/p&gt;

&lt;p&gt;原则三：重复（Repetition）&lt;br /&gt;
Robin重复原则简述：设计的某些方面需要在整个作品中重复。&lt;br /&gt;
让设计中的视觉要素在整个作品中重复出现。可以重复的颜色、形状、材质、空间关系、线宽、字体、大小和图片，等等。这样一来，既能增加条理性，还可以加强统一性。&lt;/p&gt;

&lt;p&gt;原则四：对比（Contrast）&lt;br /&gt;
Robin对比原则简述：如果两个项不完全相同，就应当使之不同，而且是截然不同。&lt;br /&gt;
基本思想是，要避免页面上元素太过相似。如果元素（字体、颜色、大小、线宽、形状、空间等）不相同，那就干脆让它们截然不同。要让页面引人注目，对比通常是最重要的一个因素，正是它能使读者首先看到这个页面。&lt;/p&gt;

&lt;h4 id=&quot;三实践这些原则&quot;&gt;三、实践这些原则&lt;/h4&gt;
&lt;p&gt;1.学习4大基本原则，它们比你相像的要简单。&lt;br /&gt;
2.认识到自己没有运用这些原则，形诸文字，陈述问题等。&lt;br /&gt;
3.应用基本原则，结果将使你大吃一惊。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>友盟统计正式包无数据问题</title>
   <link href="http://www.panxw.com/android/umeng-package-sign.html"/>
   <updated>2015-01-05T20:05:01+00:00</updated>
   <id>/android/umeng-package-sign</id>
   <content type="html">&lt;p&gt;若发现debug包运行时有数据上报，而签名打包后无数据上报，则是由于混淆造成的。&lt;!-- more --&gt;&lt;br /&gt;
需要对umeng的jar包的类保持不被混淆，proguard.cfg文件中加入：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-keep class com.umeng.** { *;}
-keep class u.aly.** { *;}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Cocos JS 布局及控件相关</title>
   <link href="http://www.panxw.com/android/cocos-js-learn.html"/>
   <updated>2014-12-30T20:05:01+00:00</updated>
   <id>/android/cocos-js-learn</id>
   <content type="html">&lt;h4 id=&quot;node显示设置&quot;&gt;Node显示设置：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;node.setVisible(true);
node.setVisible(false);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;渐变背景&quot;&gt;渐变背景：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var backgroundStartColor = cc.color(27, 23, 21); 
var backgroundEndColor = cc.color(21, 17, 15);

var  layerGradient = new cc.LayerGradient(); 
layerGradient.setStartColor(backgroundStartColor);  //起始色
layerGradient.setEndColor(backgroundEndColor); //结束色
layerGradient.setVector(cc.p(0,-1)); // 渐变方向
layerGradient.setContentSize(cc.size(winSize.width, winSize.height));    // Layer大小&amp;lt;!-- more --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;框背景按钮选中效果&quot;&gt;框背景（按钮/选中效果）：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var bgFocus = cc.DrawNode.create();
bgFocus .drawRect(cc.p(0, 0),
			cc.p(260, 86),
			cc.color(220, 67, 0, 255),
			0,
			cc.color(220, 67, 0, 255));
bgFocus .setAnchorPoint(cc.p(0, 0));
bgFocus .setPosition(cc.p(0, 6));
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;labelttf文字标签&quot;&gt;LabelTTF文字标签：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var fontColor = cc.color(255, 255, 255, 102);
var fontSize = 32;
var fontName =&quot;res/font/newfont.ttf&quot;;
var fontText=&quot;hello world&quot;;

var myLabel =  new cc.LabelTTF();
myLabel .setFontSize(fontSize );
myLabel .setString(fontText);
myLabel.setFontName(fontName);//cc.LabelTTF(text, fontName, fontSize);
myLabel .setAnchorPoint(1,0);
myLabel .setColor(fontColor );
myLabel .setVerticalAlignment(cc.TEXT_ALIGNMENT_CENTER);//对齐
myLabel.setOpacity(120);//透明度
myLabel .x=0;
myLabel .y=1;//myLabel.setPosition(0,1);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tableview操作&quot;&gt;TableView操作：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var = new Array(&quot;NO.1&quot;, &quot;NO.2&quot;, &quot;NO.3&quot;, &quot;NO.4&quot;);
var  listView = cc.TableView.create(this, cc.size(ITEM_WIDTH,ITEM_HEIGHT*LIST_VISIBLE_ITEM_COUNT));
listView .setDirection(cc.SCROLLVIEW_DIRECTION_VERTICAL);
listView .setPosition(0, 0);
listView .setDelegate(this);
listView .setVerticalFillOrder(cc.TABLEVIEW_FILL_TOPDOWN);
var offset = this.mList.getContentOffset();

tableCellAtIndex: function (table, idx) {
	//init cell
}

numberOfCellsInTableView: function (table) {
	return count;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;ccuilayout用作布局也可以用ccnode&quot;&gt;ccui.Layout用作布局，也可以用cc.Node：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var list = new ccui.Layout(); 
list.setContentSize(800，480);
list.setClippingEnabled(true);
list.setPosition(0,76);
list.setAnchorPoint(0,0);
this.addChild(list);

list.addChild(xxx);
list.addChild(yyy);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;ccdirector主要方法&quot;&gt;cc.director主要方法：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cc.director.getWinsize();
cc.director.runScene(scene);//运行新场景，取代原有scene

cc.director.pushScene(scene);//运行新场景，盖住上一个scene
cc.director.popScene(scene);//弹出stack最上一个scene
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;事件&quot;&gt;事件：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cc.eventManager.addListener({
			event: cc.EventListener.KEYBOARD,
			onKeyPressed: function (key, event) {
			}.bind(this),
			onKeyReleased: function (key, event) {

			}.bind(this)
}, this);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;调用java&quot;&gt;调用java:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jsb.reflection.callStaticMethod(className, methodName, signature, param1,parm2);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;js文件加载&quot;&gt;JS文件加载：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var jsList = [
	&quot;src/A.js&quot;,
	&quot;src/B.js&quot;,
];

function load()
 {
	 for( var i=0; i &amp;lt; jsList.length; i++) {
				require( jsList[i] );
	   }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Windows下msysgit最新下载地址</title>
   <link href="http://www.panxw.com/program/get-latest-msysgit.html"/>
   <updated>2014-12-27T20:05:01+00:00</updated>
   <id>/program/get-latest-msysgit</id>
   <content type="html">&lt;h4 id=&quot;说明&quot;&gt;说明&lt;/h4&gt;
&lt;p&gt;由于msysgit官方提供的下载链接极其不稳定或速度慢，我将最新版本的msysgit放到了百度网盘，供国内不能翻外网的朋友们下载。&lt;br /&gt;
最新版本：1.9.5-preview20141217.exe&lt;br /&gt;
百度网盘下载地址：&lt;a href=&quot;http://pan.baidu.com/s/1c0EQ3IC&quot;&gt;http://pan.baidu.com/s/1c0EQ3IC&lt;/a&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;附&quot;&gt;附&lt;/h4&gt;
&lt;p&gt;msysgit官方网站：&lt;a href=&quot;http://msysgit.github.io&quot;&gt;http://msysgit.github.io&lt;/a&gt;&lt;br /&gt;
另外的界面化的git管理工具TortoiseGit下载基本正常，官方下载地址为：&lt;a href=&quot;http://download.tortoisegit.org/&quot;&gt;http://download.tortoisegit.org/&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>HTTP请求/响应构成</title>
   <link href="http://www.panxw.com/web/http-protocol-review.html"/>
   <updated>2014-12-20T20:05:01+00:00</updated>
   <id>/web/http-protocol-review</id>
   <content type="html">&lt;h4 id=&quot;1客户端http请求&quot;&gt;1.客户端HTTP请求&lt;/h4&gt;
&lt;p&gt;请求行+若干请求头+请求数据。&lt;br /&gt;
请求行：请求方式+资源名称+HTTP版本号。&lt;br /&gt;
请求头：描述客户端请求主机及客户机的环境。&lt;br /&gt;
请求数据：多个请求头与请求数据之间用空行分割。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;请求方式：GET/POST等7种。&lt;br /&gt;
GET数据附在url中，最大容量1K。POST数据则放在请求数据中，容量无限制。&lt;/p&gt;

&lt;h4 id=&quot;2服务端http响应&quot;&gt;2.服务端HTTP响应&lt;/h4&gt;
&lt;p&gt;状态行+若干响应头+响应数据。&lt;br /&gt;
状态行：HTTP版本号+状态码+状态说明。&lt;br /&gt;
响应头：描述服务器基本信息及数据处理方式。&lt;br /&gt;
响应数据：若干响应头与响应数据之间用空行分割。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Manven构建基本步骤</title>
   <link href="http://www.panxw.com/program/maven-simple-steps.html"/>
   <updated>2014-12-13T20:05:01+00:00</updated>
   <id>/program/maven-simple-steps</id>
   <content type="html">&lt;h4 id=&quot;1主要步骤&quot;&gt;1.主要步骤&lt;/h4&gt;
&lt;p&gt;1, download and install maven。&lt;br /&gt;
2, mvn archetype:create -DgroupId=com.mycompany.app -DartifactId=my-app 创建新工程。&lt;br /&gt;
3, mvn package 将代码打包到输出到target目录。&lt;br /&gt;
4, mvn test 将测试代码到包输出到target目录。&lt;br /&gt;
5, mvn clean 清理target目录。&lt;br /&gt;
6, mvn install 将打包好的jar包安装到本地库中，一般没默认是在用户目录下的.m2\目录。&lt;br /&gt;
7, mvn deploy 发布到nexus远程仓库。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;2manven源&quot;&gt;2.Manven源&lt;/h4&gt;
&lt;p&gt;1, 搜索需要的包：http://mvnrepository.com/&lt;br /&gt;
2, maven中心库访问总出现超时问题解决。&lt;br /&gt;
开源中国提供了镜像（同步于http://mirrors.ibiblio.org/maven2/），使用方法见：http://maven.oschina.net/help.html&lt;br /&gt;
3, Maven报错“未结束的字符串字面值”，参考：http://www.cnblogs.com/yeyong/p/3906371.html&lt;br /&gt;
4, eclipse 提示tools.jar找不到，则检查下jre环境。&lt;/p&gt;

&lt;h4 id=&quot;附pomxml主要结构&quot;&gt;附pom.xml主要结构：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
  xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&amp;gt;
  &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;

  &amp;lt;groupId&amp;gt;com.youth168.maventest&amp;lt;/groupId&amp;gt;
  &amp;lt;artifactId&amp;gt;my-maven-app&amp;lt;/artifactId&amp;gt;
  &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;
  &amp;lt;packaging&amp;gt;jar&amp;lt;/packaging&amp;gt;

  &amp;lt;name&amp;gt;my-maven-app&amp;lt;/name&amp;gt;
  &amp;lt;url&amp;gt;http://maven.apache.org&amp;lt;/url&amp;gt;

  &amp;lt;properties&amp;gt;
	&amp;lt;project.build.sourceEncoding&amp;gt;UTF-8&amp;lt;/project.build.sourceEncoding&amp;gt;
  &amp;lt;/properties&amp;gt;

  &amp;lt;dependencies&amp;gt;
	&amp;lt;dependency&amp;gt;
	  &amp;lt;groupId&amp;gt;junit&amp;lt;/groupId&amp;gt;
	  &amp;lt;artifactId&amp;gt;junit&amp;lt;/artifactId&amp;gt;
	  &amp;lt;version&amp;gt;{latest-version}&amp;lt;/version&amp;gt;
	  &amp;lt;scope&amp;gt;test&amp;lt;/scope&amp;gt;
	&amp;lt;/dependency&amp;gt;
  &amp;lt;/dependencies&amp;gt;
&amp;lt;/project&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Git的Merge和Rebase</title>
   <link href="http://www.panxw.com/git/on-git-rebase-merge.html"/>
   <updated>2014-11-12T20:05:01+00:00</updated>
   <id>/git/on-git-rebase-merge</id>
   <content type="html">&lt;h4 id=&quot;一特定分支下rebase&quot;&gt;一、特定分支下Rebase&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch//确认在master分支下
*master
git pull
git rebase
git add -u//遇到冲突，要解决，再执行...
git rebase --continue
...
over when arrive &quot;master&quot;//到master为止
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;参考：http://www.cnblogs.com/sinojelly/archive/2011/08/07/2130172.html&lt;/p&gt;

&lt;h4 id=&quot;二把b库merge到a库来&quot;&gt;二、把B库merge到A库来&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@git.abc.com:user/space/A.git //准备A库代码
cd A
git branch //确保在master分支下
*master

git remote add B git@git.abc.com:user/space/B.git //设置B库
git fetch B

git diff B/master //查看diff

git fetch origin //更新A
git merge origin/master (master = git pull)

git merge B/master  //merge B to A
git mergetool //有冲突解决掉
git commit  //测试OK再commit
git push origin master //Push合并更新到A库远端
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;三其它可能用到的命令&quot;&gt;三、其它可能用到的命令&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clean -i: clean untracked files
git remote //show branches
git remote -v //show branches details
git remote show B //show B info
git reset --hard //rest to latest commit status
git stash //save eidit status, back to latest commit status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>cocos2d javascript与java互相调用途径</title>
   <link href="http://www.panxw.com/android/cocos2dx-java-with-javascript.html"/>
   <updated>2014-10-22T20:05:01+00:00</updated>
   <id>/android/cocos2dx-java-with-javascript</id>
   <content type="html">&lt;p&gt;libcocos2dx工程中添加Cocos2dxJavascriptJavaBridge.java&lt;br /&gt;
该文件在frameworks\js-bindings\bindings\manual\platform\android\java\src\org\cocos2dx\lib中。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;java代码：//cn.winfirm.tools.JavascriptHelper.java&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class JavascriptHelper {
	//method to call javascript
	public static final void callJavascriptMethod() {//【java调用javascript方法】
		final String jsCallStr = String.format(&quot;JavaHelper.javascriptMethod('%s')&quot;, &quot;hello world, from javascript&quot;);
		Cocos2dxHelper.runOnGLThread(new Runnable() {
			@Override
			public void run() {
				Cocos2dxJavascriptJavaBridge.evalString(jsCallStr);
			}
		});
	}
	//call by javascript
	public static final String loadJavaMethod(final int no, final String description) {
		return &quot;no=&quot;+no+&quot;,description=&quot;+description;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;javascript代码：//JavaHelper.js&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var JavaHelper = JavaHelper||{};
JavaHelper.callClassName = &quot;cn/winfirm/tools/JavascriptHelper&quot;;

JavaHelper.javascriptMethod=function(param) {
	cc.log(param); // &quot;hello world, javascript&quot;
}

JavaHelper.callToJava=function() {//【javascript调用java方法】
	var methodName = &quot;loadJavaMethod&quot;;
	var signature = &quot;(ILjava/lang/String;)Ljava/lang/String;&quot;;
	var param1=30;
	var param2=&quot;hello world, from javascript&quot;;
	
	var result = jsb.reflection.callStaticMethod(JavaHelper.callClassName, methodName, signature, param1, param2);
	cc.log(result);//&quot;no=30,description=hello world, from javascript&quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;javascript调用java方法时的签名类型：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[JAVA]	[signature]  
int		I  
float	F  
boolean	Z  
String	Ljava/lang/String;  
void	V  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;与JNI规范相似，但类型少得多。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cocos2d 多屏适配文章</title>
   <link href="http://www.panxw.com/android/cocos-multi-resolution-support.html"/>
   <updated>2014-10-12T20:05:01+00:00</updated>
   <id>/android/cocos-multi-resolution-support</id>
   <content type="html">&lt;p&gt;1.”Multi-resolution support”: &lt;a href=&quot;http://www.cocos2d-x.org/wiki/Multi_resolution_support&quot;&gt;http://www.cocos2d-x.org/wiki/Multi_resolution_support&lt;/a&gt;&lt;br /&gt;
2.”Cocos2d-x 多分辨率适配完全解析”:&lt;a href=&quot;http://cn.cocos2d-x.org/tutorial/show?id=1366&quot;&gt;http://cn.cocos2d-x.org/tutorial/show?id=1366&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cocos IDE开发步骤</title>
   <link href="http://www.panxw.com/android/cocos-ide-steps.html"/>
   <updated>2014-09-20T20:05:01+00:00</updated>
   <id>/android/cocos-ide-steps</id>
   <content type="html">&lt;h4 id=&quot;一启动preferences设置&quot;&gt;一、启动Preferences设置&lt;/h4&gt;
&lt;p&gt;1、General中设置Cocos2d-JS路径。&lt;br /&gt;
2、设置Python，SDK,NDK,ANT,JDK路径。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二开发及调试&quot;&gt;二、开发及调试&lt;/h4&gt;
&lt;p&gt;1、添加图片等到res目录下，并在src/resources.js中注册。&lt;br /&gt;
2、添加js文件到src目录下，并在project.json中注册到jsList数组中。&lt;br /&gt;
3、构建调试Android应用&lt;br /&gt;
1)Cocos Tools»Build Custom Runtime»…build sucess.&lt;br /&gt;
2)Run Configurations»Android ADB Mode»Runtime path: Browse»Project-debug.apk»Apply.&lt;br /&gt;
3)Run as Cocos JSBinding..&lt;/p&gt;

&lt;h4 id=&quot;三命令行模式&quot;&gt;三、命令行模式&lt;/h4&gt;
&lt;p&gt;1、新建：cocos new MyGame -l js&lt;br /&gt;
2、运行：cocos run -p web|android|ios&lt;/p&gt;

&lt;p&gt;Cocos2d-JS官网：&lt;a href=&quot;http://cocos2d-x.org/wiki/Getting_Started_Cocos2d-js&quot;&gt;http://cocos2d-x.org/wiki/Getting_Started_Cocos2d-js&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Eclipse签名打包遇“Conversion to Dalvik format...”处理</title>
   <link href="http://www.panxw.com/android/eclipse-conversion-error.html"/>
   <updated>2014-09-16T20:05:01+00:00</updated>
   <id>/android/eclipse-conversion-error</id>
   <content type="html">&lt;p&gt;Eclipse单个Android App打包正常，但Lib+App方式时，签名打包总报如下错误：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
&quot;Export Wizard: Conversion to Dalvik format failed with error 1&quot;
&lt;/code&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;解决办法：Project关闭“Build Automatically”选项，再Clean Lib+App，最后用Key来签名打包。&lt;/p&gt;

&lt;p&gt;参考：&lt;a href=&quot;http://stackoverflow.com/questions/20355333/conversion-to-dalvik-format-failed-with-error-1&quot;&gt;http://stackoverflow.com/questions/20355333/conversion-to-dalvik-format-failed-with-error-1&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>git分支开发、合并、删除等主要命令</title>
   <link href="http://www.panxw.com/git/git-branch-steps.html"/>
   <updated>2014-09-13T20:05:01+00:00</updated>
   <id>/git/git-branch-steps</id>
   <content type="html">&lt;h4 id=&quot;1克隆远程版本库&quot;&gt;1、克隆远程版本库。&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@github.com:youth168/test.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;输入密码:git，等待完成。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ./test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h4 id=&quot;2建立本地分支进行开发&quot;&gt;2、建立本地分支进行开发&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout -b dev-branch master‘ 子分支时为git checkout -b dev-branch origin/develop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;经过对本地dev-branch开发后…&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add .
git commit -am &quot;feature adding and bugs fixing&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;3合并本地分支dev-branch到master分支&quot;&gt;3、合并本地分支(dev-branch)到master分支&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout master
git merge dev-branch
git push origin master‘推送到远程
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者在dev-branch分支下执行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push origin dev-branch:master 'git push orign HEAD:new_branch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再次对dev-branch开发：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout dev-branch
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再重复第上述过程…&lt;/p&gt;

&lt;h4 id=&quot;4分支删除&quot;&gt;4、分支删除&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -d dev-branch ’不再基于dev-branch开发了，删除之
git push origin --delete dev-branch ’删除远程分支
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;5设置tag快照&quot;&gt;5、设置Tag(快照)&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag v1.0 '新建本地tag
git tag -d v1.0 '删除本地tag
git push --tag 'push本地tag到远程
git push origin --delete tag v1.0 '删除远程tag
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Cocos2d-JS steps under web and Android Platform.</title>
   <link href="http://www.panxw.com/android/cocos2d-js-tutorial.html"/>
   <updated>2014-09-01T20:05:01+00:00</updated>
   <id>/android/cocos2d-js-tutorial</id>
   <content type="html">&lt;p&gt;folder structure of sdk:&lt;br /&gt;
	http://www.cocos2d-x.org/wiki/Folder_Structure_of_Cocos2d-JS&lt;br /&gt;
why js?&lt;br /&gt;
	http://cocos2d-x.org/docs/manual/framework/html5/v2/cocosh5-advantages/en&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;environment-requirements&quot;&gt;Environment Requirements&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A Supported OS (Ubuntu 12.10+, OS X 10.7+, Windows 7+)
Cocos2d-x v3.0 (https://github.com/cocos2d/cocos2d-x/)
JDK/SDK 1.6+
NDK r9d+
Apache Ant
Python 2.7.5
WebStorm8.0.4(Key:http://peter2009.iteye.com/blog/1975994) &amp;amp; JetBrains-IDE-support for Chrome.
IDE &amp;amp; Android SDK: ADT Bundle For Windows (64-bit)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;environment-setting&quot;&gt;Environment setting:&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd cocos2d/cocos2d-js-v3.0-rc3/
python ./setup.py
COCOS2D_CONSOLE_ROOT &amp;amp; NDK_ROOT &amp;amp; ANDROID_SDK_ROOT &amp;amp; ANT_ROOT。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;build-and-test&quot;&gt;Build and Test&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@new project
cocos new js-helloworld -l js

@run test
cd js-helloworld
@cocos run -p web
or
@cocos run -p android
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;COCOS CODE IDE 创建工程。运行为Adnroid工程。然后用Eclipse打开工程，导入js-binding下的cocos库，可以调试Android。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android JSONObject解析异常问题</title>
   <link href="http://www.panxw.com/android/android-json-trouble.html"/>
   <updated>2014-08-28T20:05:01+00:00</updated>
   <id>/android/android-json-trouble</id>
   <content type="html">&lt;p&gt;Android的版本分化真麻烦，前些天从SD卡读JSONObject配置，发现一些手机正常，另一些异常（JSONObject转换问题）。&lt;br /&gt;
后来无奈改成String数组解决了兼容问题。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>推荐几个不错的VPN</title>
   <link href="http://www.panxw.com/vps/chrome-honx-vpn.html"/>
   <updated>2014-07-25T20:05:01+00:00</updated>
   <id>/vps/chrome-honx-vpn</id>
   <content type="html">&lt;p&gt;Shadowsocks，请认准是shadowsocks.com的，配合Chrome+SwitchyOmega使用，速度超快，年付99元起，不限流量！&lt;br /&gt;
链接：&lt;a href=&quot;https://portal.shadowsocks.com.hk/aff.php?aff=5921&quot;&gt;https://portal.shadowsocks.com.hk/aff.php?aff=5921&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;云梯，每月10元起，不限时，多服务器选择，速度快，强力推荐！&lt;br /&gt;
链接：&lt;a href=&quot;http://protizi.com/?r=3d02a81974887d3a&quot;&gt;http://protizi.com/?r=3d02a81974887d3a&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;del&gt;如果仅需浏览器上外网，则推荐一个Chrome浏览器翻墙插件。&lt;/del&gt; [这款失效了]&lt;br /&gt;
&lt;del&gt;链接：&lt;a href=&quot;http://honx.in/i/U84FRn8mTgLfZ37v&quot;&gt;http://honx.in/i/U84FRn8mTgLfZ37v&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>面向对像设计模式相关</title>
   <link href="http://www.panxw.com/program/design-patterns.html"/>
   <updated>2014-07-10T20:05:01+00:00</updated>
   <id>/program/design-patterns</id>
   <content type="html">&lt;h4 id=&quot;一设计原则&quot;&gt;一、设计原则&lt;/h4&gt;
&lt;p&gt;1、找出应用中可能需要变化之处，把它们独立出来，不要和那些不需要变化的代码混在一起。（找出程序中会变化的方面，然后将其和固定不变的方面分离。）&lt;br /&gt;
即把会变化的部分取出并封装起来，以便以后可以轻易的改动或扩充此部分，而不影响不需要变化的其它部分。&lt;br /&gt;
2、针对接口编程，而不是针对实现编程。&lt;br /&gt;
即针对超类型编程，变量的声明类型应该是超类型，通常是一个抽象类或者是一个接口。意味着声明类时不用理会以后执行的真正对象类型。&lt;br /&gt;
3、多用组合，少用继承。&lt;br /&gt;
增强系统的弹性，不仅可将算法族封装成类，更可以”在运行时动态的改变行为“，只要组合的行为对象符合正确的接口标准即可。&lt;br /&gt;
4、类应该对扩展开放，对修改关闭。开闭原则。&lt;br /&gt;
5、要依赖抽象，不要依赖具体类。依赖倒置原则。&lt;br /&gt;
6、一个类应该只有一个引起变化的原则。（单一职责）&lt;br /&gt;
不让高层组件依赖低层组件，而且不管高层或低层组件，两者都应该依赖于抽象。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二设计模式&quot;&gt;二、设计模式&lt;/h4&gt;
&lt;p&gt;模式是在某情境(context)下，针对某问题的某种解决方案。常见模式有：&lt;br /&gt;
观察者模式：定义了对象之间一对多依赖，这样一来，当一个对象改状态时，它的所有依赖都会收到通知并自动更新。&lt;br /&gt;
装饰者模式：动态地将责任附加到对象上，若要扩展功能，装饰者提供了比继承更有弹性的替代方案。&lt;br /&gt;
工厂方法模式：定义了一个创建对象的接口，但子类决定要实例化的类是哪一个。工厂方法让类把实例化推迟到子类。&lt;br /&gt;
单件模式：确保一个类只有一个对象，并提供一个全局的访问点。&lt;br /&gt;
命令模式：将”请求“封装成对象，以便使用不同的请求，队列或者日志来参数化其它对象，命令模式也可支持撤销的操作。&lt;br /&gt;
适配器模式：将一个类的接口，转换成客户期望的另一个接口，适配器让原本接口不兼容的类可以合作无间。&lt;br /&gt;
模块方法模式：在一个方法中定义一个算法的骨架，而将一些步骤延迟到子类中。使得子类可以在不改变算法结构的情况下，重新定义算法中的某些步骤。&lt;br /&gt;
迭代器模式：提供一种方法顺序访问一个聚合对象中的各个元素，而不暴露其内部的表示。&lt;br /&gt;
组合模式：允许你将对象组合成树形结构来表现”整体/部分”层次结构。组合模式让客户以一致的方式处理个别对象以及对象组合。&lt;br /&gt;
状态模式：允许对象在内部状态改变时改变它的行为，对象看起来好像修改了它的类。&lt;br /&gt;
代理模式：为另一个对象提供一个替身或占位符以控制对这个对象的访问。&lt;br /&gt;
复合模式：模式的模式，模式携手合作。&lt;/p&gt;

&lt;h4 id=&quot;三反模式&quot;&gt;三、反模式&lt;/h4&gt;
&lt;p&gt;告诉你如何用一个不好的解决方案，解决一个问题。&lt;br /&gt;
反模式看起来总像是一个好的解决方案，但当它真正被采用后，就会带来麻烦。&lt;br /&gt;
通过反模式归纳，我们可以帮助代人在实现它们之前，辨出不好的解决方案。&lt;br /&gt;
常见反模式：开发反模式，OO反模式，组织反模式，领域特定反模式。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android View及ViewGroup知识</title>
   <link href="http://www.panxw.com/android/about-android-view.html"/>
   <updated>2014-06-21T20:05:01+00:00</updated>
   <id>/android/about-android-view</id>
   <content type="html">&lt;h4 id=&quot;一基本知识&quot;&gt;一、基本知识&lt;/h4&gt;
&lt;p&gt;Adroid的UI界面都是由View和ViewGroup及其派生类组合而成的。其中，View是所有UI组件的基类，ViewGroup是容纳这些组件的容器。ViewGroup本身从View派生出来，作为各Layout的基类。&lt;br /&gt;
View代表了用户界面组件的一块可绘制的空间块。每一个View在屏幕上占据一个长方形区域。在这个区域内，这个View对象负责图形绘制和事件处理。&lt;br /&gt;
ViewGroup可以包含作为叶子节点的View，也可以包含作为更低层次的子ViewGroup，而子ViewGroup又可以包含下一层的叶子节点的View和ViewGroup。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二自定义viewgroup&quot;&gt;二、自定义ViewGroup&lt;/h4&gt;
&lt;p&gt;1.继承ViewGroup。&lt;br /&gt;
2.重写onLayout(根据orientation）及onMeasure。&lt;/p&gt;

&lt;p&gt;参考：&lt;br /&gt;
1.&lt;a href=&quot;http://www.2cto.com/kf/201109/104633.html&quot;&gt;http://www.2cto.com/kf/201109/104633.html&lt;/a&gt;&lt;br /&gt;
2.&lt;a href=&quot;http://bbs.csdn.net/topics/370144745&quot;&gt;http://bbs.csdn.net/topics/370144745&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>基于Volley的网络请求工具</title>
   <link href="http://www.panxw.com/android/android-volley-tool.html"/>
   <updated>2014-06-15T20:05:01+00:00</updated>
   <id>/android/android-volley-tool</id>
   <content type="html">&lt;h4 id=&quot;一volley基本处理流程&quot;&gt;一、Volley基本处理流程&lt;/h4&gt;
&lt;p&gt;1、应用初始化Volley。&lt;br /&gt;
2、Volley创建一个RequestQueue、NetworkDispatcher组及Network。&lt;br /&gt;
3、RequestQueue即一个Request队列，RequestQueue会创建一个ExecutorDelivery。&lt;br /&gt;
4、NetworkDispatcher实质是Thread，从RequestQueue中取Request，通过Network加以执行。&lt;br /&gt;
5、Network负责网络请求处理，具体过程交给HttpStack处理。&lt;br /&gt;
6、HttpStack分HttpURLConnection(SDK_INT&amp;gt;=9)与HttpClient与两种方式。&lt;br /&gt;
7、ExecutorDelivery负责处理请求结果，并与主线程进行交互。&lt;br /&gt;
8、Volley在上述2-7的基础上增加了Cache等附加处理环节。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二基于volley的网络请求工具&quot;&gt;二、基于Volley的网络请求工具&lt;/h4&gt;
&lt;p&gt;在AndroidVolley基础上扩展了com.android.http包，增加了ByteArrayRequest及RequestManager，方便JSON、XML、Map()、及RequestMap()的网络请求。&lt;br /&gt;
工程地址：&lt;a href=&quot;https://github.com/panxw/android-volley-manager&quot;&gt;https://github.com/panxw/android-volley-manager&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;三早期使用的android-async-http改进型&quot;&gt;三、早期使用的android-async-http改进型&lt;/h4&gt;
&lt;p&gt;工程地址：&lt;a href=&quot;https://github.com/panxw/android-async-http&quot;&gt;https://github.com/panxw/android-async-http&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android数据保存与恢复</title>
   <link href="http://www.panxw.com/android/android-save-restore.html"/>
   <updated>2014-06-12T20:05:01+00:00</updated>
   <id>/android/android-save-restore</id>
   <content type="html">&lt;p&gt;在一个项目中，我使用onSaveInstanceState和onRestoreInstanceState中对数据做了保存与恢复，但应用被91助手等清理后重新进入，还是偶有Activity报空指针错误的情况。查看LOG发现onCreate使用数据代码行，在onRestoreInstanceState数据恢复之前就已执行了。后来换成在onCreate中进行数据恢复，就没再出现这种情况了。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;示例代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private String data=&quot;some user data&quot;;

@Override
protected void onCreate(Bundle savedInstanceState) {
	super.onCreate(savedInstanceState);
	if(savedInstanceState!=null) {//如果有数据被需恢复，onRestoreInstanceState会被触发，并将savedInstanceState传递到onCreate
		Log.d(TAG,&quot;onRestoreInstanceState is not null...&quot;);
		data=savedInstanceState.getString(&quot;data&quot;);
	}
	
	//tv.setText(data);
}

@Override
protected void onSaveInstanceState(Bundle outState) {
	super.onSaveInstanceState(outState);
	outdate.putString(&quot;data&quot;, data);
}

@Override
protected void onRestoreInstanceState(Bundle savedInstanceState) {//savedInstanceState会传递到onCreate，在onCreate中恢复
	super.onRestoreInstanceState(savedInstanceState);
	//data=savedInstanceState.getString(&quot;data&quot;);//不在这里用data=savedInstanceState.getString(&quot;data&quot;);直接来恢复。
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考文章：&lt;a href=&quot;http://blog.csdn.net/lixiang0522/article/details/7565401&quot;&gt;http://blog.csdn.net/lixiang0522/article/details/7565401&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>双重检查加锁单例</title>
   <link href="http://www.panxw.com/program/double-lock-singleton.html"/>
   <updated>2014-04-15T20:05:01+00:00</updated>
   <id>/program/double-lock-singleton</id>
   <content type="html">&lt;p&gt;双重检查加锁单例，解决多线程访问和效率问题。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Singleton {
	private volatile static Singleton instance=null;
	private Singleton(){
	}
	
	public static Singleton getInstance(){
		if(null == instance) {
			synchronized(Singleton.class) {
				if(null==instance) {
					instance = new Singleton();
				}
			}
		}
		return instance;
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;以上java 5及以上版本有效。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android ROM包制作及刷机过程简介</title>
   <link href="http://www.panxw.com/android/android-rom-about.html"/>
   <updated>2014-03-28T20:05:01+00:00</updated>
   <id>/android/android-rom-about</id>
   <content type="html">&lt;h4 id=&quot;一android-rom种类&quot;&gt;一、Android ROM种类&lt;/h4&gt;
&lt;p&gt;1.Bootloader ROM，连接PC刷机，面向技术人员。&lt;br /&gt;
2.Recovery ROM，Recovery模式刷机，面向普通用户。&lt;/p&gt;

&lt;h4 id=&quot;二bootloader-rom的组成img为linux镜像文件&quot;&gt;二、Bootloader ROM的组成（img为linux镜像文件）&lt;/h4&gt;
&lt;p&gt;1.系统镜像：system.img，相当于linux下的system下的所有文件及目录，确定内核空间大小。&lt;br /&gt;
2.用户镜像：userdata.img，包含用户的数据，确定用户空间大小。&lt;br /&gt;
3.Linux内核镜像：boot.img，Linux内核镜像。&lt;br /&gt;
4.Recovery镜像: recovery.img&lt;br /&gt;
5.Bootloader镜像:bootloader.img&lt;br /&gt;
前三个镜像是必须的，后面两个可选。可单独一个一个刷，也可整体刷写。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;Bootloader ROM的制作，参考&lt;a href=&quot;http://www.cyanogenmod.org/&quot;&gt;http://www.cyanogenmod.org/&lt;/a&gt;。&lt;br /&gt;
下载编译后，生成system.img,userdata.img,boot.img,recovery.img，用fastboot进行刷机操作。&lt;br /&gt;
不建议刷bootloader.img，可能刷成砖头。&lt;/p&gt;

&lt;p&gt;system.img解压system.img.raw&lt;br /&gt;
mount system.img.rao ./system，可修改img中的内容。&lt;br /&gt;
重新打包成原始system.img。&lt;/p&gt;

&lt;h4 id=&quot;三recovery-rom的组成实质为一个zip文件关键制作edify脚本&quot;&gt;三、Recovery ROM的组成（实质为一个ZIP文件，关键制作Edify脚本）&lt;/h4&gt;
&lt;p&gt;META-INFO目录：包含存储签名文件及更新脚本文件。&lt;br /&gt;
system目录：要复制到system分区的文件。&lt;br /&gt;
boot.img：镜像文件。&lt;br /&gt;
比较多适合制作升级文件。&lt;/p&gt;

&lt;p&gt;制作Recovery ROM，参考&lt;a href=&quot;http://www.clockworkmod.com/&quot;&gt;http://www.clockworkmod.com/&lt;/a&gt;&lt;br /&gt;
进入Recovery模式(电源+音量键)进行刷机。&lt;/p&gt;

&lt;h4 id=&quot;参考&quot;&gt;参考&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://edu.51cto.com/lesson/id-13375.html&quot;&gt;http://edu.51cto.com/lesson/id-13375.html&lt;/a&gt;
&lt;a href=&quot;http://www.miui.com/thread-1271033-1-1.html&quot;&gt;http://www.miui.com/thread-1271033-1-1.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Debian/Linux ruby setup</title>
   <link href="http://www.panxw.com/linux/debian-ruby-setup.html"/>
   <updated>2014-03-11T20:05:01+00:00</updated>
   <id>/linux/debian-ruby-setup</id>
   <content type="html">&lt;p&gt;有别于Windows下的rubyinstall+devkit安装与配置。Debian/Linux下方便多了。&lt;/p&gt;

&lt;h4 id=&quot;一安装git&quot;&gt;一、安装Git&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;二安装cc开发环境&quot;&gt;二、安装C/C++开发环境&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h4 id=&quot;三安装ruby开发环境&quot;&gt;三、安装ruby开发环境&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ruby irb rdoc ruby-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;四安装ruby-gem&quot;&gt;四、安装ruby gem&lt;/h4&gt;
&lt;p&gt;安装好ruby的基本开发环境后，就可以安装ruby gem了，如jekyll。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo gem install rdiscount jekyll redcarpet
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Windows安装Debian Linux步骤</title>
   <link href="http://www.panxw.com/linux/install-debian-windows.html"/>
   <updated>2014-03-10T20:05:01+00:00</updated>
   <id>/linux/install-debian-windows</id>
   <content type="html">&lt;p&gt;本文中使用Win7，Xp应该类似；Debian使用7.4。&lt;/p&gt;

&lt;h4 id=&quot;一下载文件&quot;&gt;一、下载文件&lt;/h4&gt;
&lt;p&gt;下载debian-7.4.0-i386-CD-1.iso,(http://cdimage.debian.org/debian-cd/7.4.0/i386/iso-cd/debian-7.4.0-i386-CD-1.iso)&lt;br /&gt;
下载vmlinuxz,initrid.gz,boot.img.gz(http://ftp.debian.org/debian/dists/Debian7.4/main/installer-i386/20130613+deb7u1+b2/images/hd-media/)&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二准备fat32分区及debian文件系统空间&quot;&gt;二、准备FAT32分区及Debian文件系统空间&lt;/h4&gt;
&lt;p&gt;备份F备数据并删除该盘，再重建一FAT32新F盘，用于存放debian-7.4.0-i386-CD-1.iso安装文件，并留多数空闲空间用作Debian文件系统空间。&lt;br /&gt;
考备下载好的debian-7.4.0-i386-CD-1.iso文件到F盘，Daemon tool加载iso并运行setup.exe，选择常规模式(注意，最后一步先不忙立即重启)。&lt;br /&gt;
考备下载的vmlinuxz,initrid.gz,boot.img.gz，到C:\win32-loader目录，替换原有文件之后再重启。&lt;/p&gt;

&lt;h4 id=&quot;三系统安装&quot;&gt;三、系统安装&lt;/h4&gt;
&lt;p&gt;重启进入引导入时，选择Continue to install process，即开始进入Debian图形化安装流程了。&lt;br /&gt;
如果可连网，建议选择安装Gome等必须组件，否则安装完成只有基本系统了。&lt;/p&gt;

&lt;h4 id=&quot;四部分问题&quot;&gt;四、部分问题&lt;/h4&gt;
&lt;p&gt;debian-7.4.0-i386-CD-1.iso必须存放在FAT32文件系统根目录下(DVD格式iso过大，FAT32文件系统不支持)。&lt;br /&gt;
不能使用debian-7.4.0-i386-CD-1.iso自身解压出来的vmlinuxz,initrid.gz,boot.img.gz，必须替换。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Win7花生壳公网映射80端口的问题</title>
   <link href="http://www.panxw.com/web/oray-win7-try.html"/>
   <updated>2014-03-05T20:05:01+00:00</updated>
   <id>/web/oray-win7-try</id>
   <content type="html">&lt;p&gt;之前在一台Win XP上开启Tomcat(80端口)，选择花生壳“开启外网HTTP80端口”，映射完成后，通过域名是可以正常访问的。&lt;br /&gt;
但换了台Win7，同样的方法却失效了，提示“很抱歉，您访问的花生壳动态域名不在线，请稍后再尝试访问！”。可是，当不选择“开启外网HTTP80端口”，通过每次映射自动生成的端口号，则域名可以访问了。&lt;br /&gt;
搜索找到了解决办法：&lt;a href=&quot;http://blog.csdn.net/dahaidao/article/details/6442537&quot;&gt;http://blog.csdn.net/dahaidao/article/details/6442537&lt;/a&gt;&lt;br /&gt;
这样一来，“开启外网HTTP80端口”又有效了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android必要模块－－升级与公告</title>
   <link href="http://www.panxw.com/android/project-startup.html"/>
   <updated>2014-03-04T20:05:01+00:00</updated>
   <id>/android/project-startup</id>
   <content type="html">&lt;p&gt;基于Webservice api的Android有必要初期就为其设计好升级和公告功能：&lt;br /&gt;
1,APP一旦被用户安装上，如果没有升级功能，那就难于受控了，升级功能的重要性就不用多说了。&lt;br /&gt;
2,公告的功能也是很重要的，在对Webservice进行维护升级时，难免影响当时正在使用的用户。如果有公告模块，便可提前告知用户相关事宜了。&lt;br /&gt;
3,创建打包签名的key，并妥善保管好。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Cocos2dx 编译过程</title>
   <link href="http://www.panxw.com/android/android-cocos2d-tutorial.html"/>
   <updated>2014-02-20T20:05:01+00:00</updated>
   <id>/android/android-cocos2d-tutorial</id>
   <content type="html">&lt;p&gt;可能用到JDK，Python，Eclipse建议先行安装与配置好，在此不再多述。最好将adt-bundle-windows，android-ndk-r9c，cocos2dx2.2解压到同一目录下，如D:\cocos2dx。以下主要讨论Windows下NDK环境编译cocos2d-x工程的步骤。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;一工程创建&quot;&gt;一、工程创建&lt;/h4&gt;
&lt;p&gt;cmd进入cocos2d-x2.2目录的tools\project-creator，执行: python create_project.py -project helloworld -package com.allthelucky.game -language cpp&lt;br /&gt;
末尾出现Have Fun!时，表示工程创建成功，在D:\cocos2dx\cocos2d-x-2.2.2\projects\helloworld可看到各平台对应项目，包括Android平台的pro.android，然后就是程序编写或编译了。&lt;/p&gt;

&lt;h4 id=&quot;二android工程编译&quot;&gt;二、Android工程编译&lt;/h4&gt;
&lt;p&gt;1)单独NDK编译方法：&lt;br /&gt;
1)添加NDK路径D:\cocos2dx\android-ndk-r9c Path。&lt;br /&gt;
2)添加环境变量NDK_MODULE_PATH，其值为D:\cocos2dx\cocos2d-x-2.2.2;D:\cocos2dx\cocos2d-x-2.2.2\cocos2dx\platform\third_party\android\prebuilt。&lt;br /&gt;
3)cmd进入pro.android目录下，执行ndk-build就可开始编译了。&lt;/p&gt;

&lt;p&gt;2)Eclipse(CDT)编译方法：&lt;br /&gt;
1)导入Android工程序所需的Library库工程。D:\cocos2dx\cocos2d-x-2.2.2\cocos2dx\platform\android\java&lt;br /&gt;
2)打开pro.android工程Properties，选中C/C++ Build选项，将Build Settings选项卡下“Build command”的值由原来的bash ${ProjDirPath}/build_native.sh改为：D:\cocos2dx\android-ndk-r9c\ndk-build.cmd，子栏目Environment下加入NDK_MODULE_PATH，值为E:D:\cocos2dx\cocos2d-x-2.2.2;D:\cocos2dx\cocos2d-x-2.2.2\cocos2dx\platform\third_party\android\prebuilt&lt;br /&gt;
3)最后Clean一下工程，再运行Android程序即开始编译了。&lt;br /&gt;
4)查看cocos2dx代码：Preference-&amp;gt;Workspace-&amp;gt;Linked Resources添加COCOS2DX变量及值D:\cocos2dx\cocos2d-x-2.2.2&lt;/p&gt;

&lt;h4 id=&quot;三win32工程编译&quot;&gt;三、Win32工程编译&lt;/h4&gt;
&lt;p&gt;1)环境WIN7+VS2012，方便代码查看或输入，建议安装Visual Assist X插件&lt;br /&gt;
2)进入目录,运行build-win32.bat编译cocos2d-x库。&lt;br /&gt;
3)vs2012打开cocos2d-win32.vc2012.sln,然后Build Solution编译工程。&lt;/p&gt;

&lt;h4 id=&quot;四演示项目&quot;&gt;四、演示项目&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/panxw/android-develop-toolkit/tree/master/AndroidCocos2dx&quot;&gt;https://github.com/panxw/android-develop-toolkit/tree/master/AndroidCocos2dx&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;五其它问题&quot;&gt;#五、其它问题&lt;/h4&gt;
&lt;p&gt;fatal error: AppDelegate.h: No such file or directory，原因可能是pro.android已不在D:\cocos2dx\cocos2d-x-2.2.2\projects\helloworld目录下了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android GridView去边距</title>
   <link href="http://www.panxw.com/android/listview-selector.html"/>
   <updated>2013-10-20T20:05:01+00:00</updated>
   <id>/android/listview-selector</id>
   <content type="html">&lt;p&gt;为GridView添加android:listSelector=”@null”可去掉其与item的间距。&lt;br /&gt;
当动态为item设置背景时，用android:listSelector=”@null”时，条目的选中效果不是自己所设置的，各种尝试后，发现设置成@android:color/transparent又正常了。&lt;br /&gt;
难道”@android:color/transparent”和”@null”不都是表示透明吗？&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android退出前的stopService</title>
   <link href="http://www.panxw.com/android/service-destroy.html"/>
   <updated>2013-08-10T20:05:01+00:00</updated>
   <id>/android/service-destroy</id>
   <content type="html">&lt;p&gt;问题：
Android用System.exit(0)退出时，如果前面有stopService可能使Service未来得及进入onDestroy，整个应用进程就已退出了，更可能产生异常。&lt;/p&gt;

&lt;p&gt;解决办法：延时100ms左右再调stopService.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Appfog Java Web操作指南</title>
   <link href="http://www.panxw.com/web/appfog-javaweb-step.html"/>
   <updated>2013-07-12T20:05:01+00:00</updated>
   <id>/web/appfog-javaweb-step</id>
   <content type="html">&lt;p&gt;按以下步骤操作：&lt;br /&gt;
1,注册appfog.com账号，创建应用xxx&lt;br /&gt;
2,安装Rubyinstaller，选择1.93版本的&lt;br /&gt;
3,升级gem，执行gem update –system&lt;br /&gt;
4,安装appfog.com部署工具af，执行gem install af&lt;br /&gt;
5,进入要上传的目录(其下可以放war包，也可以是Webroot下文件），执行af login，af update xxx&lt;/p&gt;

&lt;p&gt;当修改后再次更新时，最好af logout一下，重新af login.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android NDK 编译</title>
   <link href="http://www.panxw.com/android/ndk-env-setup.html"/>
   <updated>2013-06-20T20:05:01+00:00</updated>
   <id>/android/ndk-env-setup</id>
   <content type="html">&lt;p&gt;安装cygwin，.bashprofile末加入：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ANDROID_NDK=/cygdrive/d/android/android-ndk-r6b
export ANDROID_NDK
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;一生成h文件&quot;&gt;一、生成.h文件&lt;/h4&gt;
&lt;p&gt;以Android工程为例，进到目录，执行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javah -classpath bin/classes com.sample.test.HelloWorld
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;二编译&quot;&gt;二、编译&lt;/h4&gt;
&lt;p&gt;进到目录，执行：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
$ANDROID_NDK/ndk-build clean
$ANDROID_NDK/ndk-build
&lt;/code&gt;&lt;!-- more --&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>DES,ASE等常见算法网站</title>
   <link href="http://www.panxw.com/program/common-algorithms-site.html"/>
   <updated>2013-06-19T20:05:01+00:00</updated>
   <id>/program/common-algorithms-site</id>
   <content type="html">&lt;p&gt;网址收藏：&lt;br /&gt;
http://embeddedsw.net/Cipher_Reference_Home.html &lt;br /&gt;
http://en.wikipedia.org/wiki/AES_implementations#C.2FASM_library&lt;/p&gt;

&lt;p&gt;a byte-oriented aes-256 implementation&lt;br /&gt;
http://www.literatecode.com/aes256&lt;/p&gt;

&lt;p&gt;AES Crypt&lt;br /&gt;
http://www.aescrypt.com/download/&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PHP学习入门级练习</title>
   <link href="http://www.panxw.com/web/php-learn-test.html"/>
   <updated>2013-06-11T20:05:01+00:00</updated>
   <id>/web/php-learn-test</id>
   <content type="html">&lt;h4 id=&quot;一php基础操作&quot;&gt;一、PHP基础操作&lt;/h4&gt;
&lt;p&gt;1,基本语法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
	echo '---------------start--------------';
	echo __FILE__;//打印预定义常量
	echo &quot;Hello world&quot;;//一般打印
	define('SCHOOL',&quot;YANTZE UNIVERSITY&quot;);//定义常量
	echo SCHOOL;//打印常量
	$name=&quot;savant&quot;;//name
	$age=28;
	echo 'name='.$name.',age='.$age;//打印变量，字符串连接
	$array=array('name'=&amp;gt;'allthelucky','age'=&amp;gt;28);//定义数组
	echo json_encode($array);//转成json输出
	$array=array(array(&quot;id&quot;=&amp;gt;'1',&quot;name&quot;=&amp;gt;'hello'),array(&quot;id&quot;=&amp;gt;'2',&quot;name&quot;=&amp;gt;'world'));
	echo json_encode($array);//转成jsonarray输出
	$array=array('this','is','php','test');//定义数组
	echo($array[0]);//打印第一个元素
	print_r($array);//全打印
	$have=true;//定义boolean
	echo($have);
	function show($result) {//定义函数
		echo 'result is:'.$result;
	}
	$result='number 1';
	show($result);//调用函数
	function mult($a, $b) {//定义带返回值函数
		return $a*$b;
	}
	$a=10;
	$b=20;
	echo 'result='.mult($a,$b);//调用函数
	$c=20;
	if ($c == 20) {//if else 语句
		echo 'yes';
	} else {
		echo 'no';
	}
	$num=1;
	while($num &amp;lt; 10) {//while循环
		echo 'num='.$num;
		$num+=1;
	}
	$array=array('1'=&amp;gt;'hellsf','2'=&amp;gt;'sadfadfsd','3'=&amp;gt;'asdfasdfasdfsdf');
	foreach($array as $key=&amp;gt;$value) {//foreach 语句，输出key,value
		echo $key.'='.$value;
	}
	foreach($array as $value) {//foreach语句，只输出值 
		echo $value;
	}
	print_r($array);
	$str = ' asdf safsd ';
	echo trim($str);//trim函数
	echo strlen($str);//strlen函数
	echo md5($str);//md5加密
	echo sha1($str);//sha1加密
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2,使用类：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
	class User {
		public $name=&quot;savant&quot;;
		public $age =&quot;age&quot;;
		public function __construct($name, $age) {//构造方法
		$this-&amp;gt;name=$name;
		$this-&amp;gt;age=$age;
		}
		public function show() {//成员函数
		echo 'name='.$this-&amp;gt;name.',age='.$this-&amp;gt;age;
		}
	}
	$user = new User('hello world', 26);
	$user-&amp;gt;show();
	echo '---------------end--------------';
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3,表单操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;?php
	echo '---------------start--------------';
	echo 'name'.$_GET['name'];//get参数
	echo 'age'.$_GET['age'];
	echo 'name='.$_POST['name'];//post参数
	echo 'password='.$_POST['password'];
	echo 'desc='.$_POST['desc'];
	$path='./upfiles'.$_FILES['pic']['name'];
	move_uploaded_file($_FILES['pic']['temp'],$path);
	echo $_POST['pic'];
	echo '---------------end--------------';
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;FORM代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;form name=&quot;data&quot; method=&quot;post&quot; action=&quot;test.php&quot; enctype=&quot;multipart/form-data&quot; &amp;gt;
	name:&amp;lt;input name=&quot;name&quot; type=&quot;text&quot; value=&quot;&quot;&amp;gt;&amp;lt;/input&amp;gt;
	&amp;lt;br/&amp;gt;
	password:&amp;lt;input name=&quot;password&quot; type=&quot;password&quot; value=&quot;&quot;&amp;gt;&amp;lt;/input&amp;gt;
	&amp;lt;br/&amp;gt;
	desc:&amp;lt;textarea name=&quot;desc&quot;&amp;gt;&amp;lt;/textarea&amp;gt;
	&amp;lt;br/&amp;gt;
	pic:&amp;lt;input name=&quot;pic&quot; type=&quot;file&quot; value=&quot;&quot;&amp;gt;&amp;lt;/input&amp;gt;
	&amp;lt;br/&amp;gt;
	&amp;lt;input name=&quot;submit&quot; type=&quot;submit&quot;&amp;gt;&amp;lt;/input&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;二数据库mysql简单操作练习&quot;&gt;二、数据库MySql简单操作练习&lt;/h4&gt;
&lt;p&gt;1,MySql服务启动和停止&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;net start mysql
net stop mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2,数据库操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create database USER_DB;//创建数据库
show databases;//查看数据库
use USER_DB;//选择数据库
drop database DBNAME;//删除数据库
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3,表格操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;create table if not exists USER(id int auto_increment primary key, user varchar(20) not null, password varchar(40) not null, createtime datetime);//创建表格
rename table USER to USERS;//改表格名
drop table if exists USER;//删除表格
show tables;//表出表格 
describe USER;//显示表结构
insert into admin(user,password) values(&quot;pan&quot;,&quot;123456&quot;);//添加记录到表格 
select * from USER;//查询表格记录
update USER set passowrd=&quot;111111&quot;;//更新表格记录
delete from USER where user=&quot;abc&quot;;//删除记录
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>TabActivity子Activity以代码进行切换</title>
   <link href="http://www.panxw.com/android/tabhost-switch.html"/>
   <updated>2013-06-04T20:05:01+00:00</updated>
   <id>/android/tabhost-switch</id>
   <content type="html">&lt;p&gt;TabActivity子Activity直接以startActivity方式切换子Activity时会有些问题，不过可以这样解决：&lt;/p&gt;

&lt;p&gt;1,在TabActivity中加入切换方法，如AppHostActivity.java中：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public void setCurrentTab(int index) {
		try {
			this.tabHost.setCurrentTab(index);
		} catch (Exception e) {
			e.printStackTrace();
		}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2,在AppHostActivity子Activity中这样切换到其它Activity:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;((AppHostActivity)getParent()).setCurrentTab(1);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>人际交往的六种模式</title>
   <link href="http://www.panxw.com/read/six-relationship-model.html"/>
   <updated>2013-05-15T20:05:01+00:00</updated>
   <id>/read/six-relationship-model</id>
   <content type="html">&lt;p&gt;人际交往的六种模式，摘自高效能人士的7个习惯。分别是：&lt;br /&gt;
双赢：利人利己；&lt;br /&gt;
输/输：两败俱伤；&lt;br /&gt;
赢/输：损人利己；&lt;br /&gt;
赢：独善其身；&lt;br /&gt;
输/赢：舍己为人；&lt;br /&gt;
无交易：好聚好散。&lt;/p&gt;

&lt;p&gt;双赢不是什么技巧，而是人际交往的哲学。&lt;br /&gt;
哪一种最好？答案是视情况而定。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android常见问题汇集</title>
   <link href="http://www.panxw.com/android/android-interview-faqs.html"/>
   <updated>2013-05-06T20:05:01+00:00</updated>
   <id>/android/android-interview-faqs</id>
   <content type="html">&lt;h4 id=&quot;14大组件activityservicecontent-providerbroadcastreceiver&quot;&gt;1、4大组件:Activity,Service,Content Provider,BroadcastReceiver.&lt;/h4&gt;

&lt;h4 id=&quot;2absolutelayoutframelayoutrelativelayoutlinearlayouttablelayout&quot;&gt;2、AbsoluteLayout,FrameLayout,RelativeLayout,LinearLayout,TableLayout.&lt;/h4&gt;

&lt;h4 id=&quot;3startservice和bindservice生命周期差别&quot;&gt;3、startservice和bindService生命周期差别：&lt;/h4&gt;
&lt;p&gt;onCreate()..onStart()..onDestroy();&lt;br /&gt;
OnCreate()..onBind()..onUnbind()..onDestroy();&lt;br /&gt;
可startService()或bind()多次，但只onCreate()一次。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;4handler-looper-messagequeue和ui-thread关系&quot;&gt;4、Handler, Looper, MessageQueue和UI Thread关系。&lt;/h4&gt;
&lt;p&gt;Message：消息，其中包含了消息ID，消息处理对象以及处理的数据等，由MessageQueue 统一列队，终由Handler 处理。&lt;br /&gt;
Handler：处理者，负责Message 的发送及处理。使用Handler 时，需要实现handleMessage(Message msg)方法来对特定的Message 进行处理，例如更新UI 等。&lt;br /&gt;
MessageQueue：消息队列，用来存放Handler 发送过来的消息，并按照FIFO 规则执行。当然，存放Message并非实际意义的保存，而是将Message以链表的方式串联起来的，等待Looper 的抽取。&lt;br /&gt;
Looper：消息泵，不断地从MessageQueue 中抽取Message 执行。因此，一个MessageQueue需要一Looper。Thread：线程，负责调度整个消息循环，即消息循环的执行场所。&lt;/p&gt;

&lt;h4 id=&quot;5android多线程方法&quot;&gt;5、Android多线程方法。&lt;/h4&gt;
&lt;p&gt;1)Activity.runOnUiThread(Runnable)&lt;br /&gt;
2)View.post(Runnable) ;View.postDelay(Runnable , long)&lt;br /&gt;
3)Handler&lt;br /&gt;
4)AsyncTask&lt;/p&gt;

&lt;h4 id=&quot;6sleepwait含义&quot;&gt;6、sleep(),wait()含义。&lt;/h4&gt;
&lt;p&gt;sleep是静态方法，是进入等待池中等待。&lt;br /&gt;
wait()是进入等待池等待，让出系统资源。等待其他线程调用notifyall方法唤醒等待池中的所有线程。&lt;/p&gt;

&lt;h4 id=&quot;7单例模式中懒汉式和饿汉式的区别&quot;&gt;7、单例模式中,懒汉式和饿汉式的区别。&lt;/h4&gt;
&lt;p&gt;饿汉式是线程安全的,在类创建的同时就已经创建好一个静态的对象供系统使用,以后不在改变。&lt;br /&gt;
懒汉式如果在创建实例对象时不加上synchronized则会导致对对象的访问不是线程安全的。&lt;/p&gt;

&lt;h4 id=&quot;8jniaidl区别&quot;&gt;8、JNI、AIDL区别。&lt;/h4&gt;
&lt;p&gt;jni  是用于 java 应用层去调用 c++ 或者c 编写的库。比如Cocos2dx游戏开发，游戏主体在C++中实现，通过Java层调用。&lt;br /&gt;
aidl 是用于进程间的通信，跨进程服务。有点像应用群体内的一个能提供特定服务的供应商。&lt;/p&gt;

&lt;h4 id=&quot;9android-apk的数字签名的作用&quot;&gt;9、Android APK的数字签名的作用&lt;/h4&gt;
&lt;p&gt;这个数字签名由应用程序的作者完成，并不需要权威的数字证书签名机构认证，它只是用来让应用程序包自我认证的。&lt;/p&gt;

&lt;h4 id=&quot;10listview解决方案&quot;&gt;10.ListView解决方案。&lt;/h4&gt;
&lt;p&gt;setTag,图片缓存&lt;/p&gt;

&lt;h4 id=&quot;11同步异步区别&quot;&gt;11.同步异步区别。&lt;/h4&gt;
&lt;p&gt;同步解决数据共享问题，控制某一资源的访问。对象锁。&lt;br /&gt;
异步解决一个对象的某一方法同时被多个点竞争访问的问题。对象锁，信号量。&lt;/p&gt;

&lt;h4 id=&quot;12多屏幕适配问题&quot;&gt;12.多屏幕适配问题&lt;/h4&gt;
&lt;p&gt;a.使用宽度及高度适配的界面布局，最大限度兼容各类尺寸屏幕。&lt;br /&gt;
b.对于一些特殊界面，如仅能一屏显示，而不同尺寸屏幕显示效果不一样时，可针对特定屏建立布局文件来解决。&lt;br /&gt;
c.相应地，不同布局会用到不同分辨率图片。&lt;br /&gt;
例子有，MEZU手机，华为手机，作过针对适配。&lt;/p&gt;

&lt;h4 id=&quot;13android-view-树的绘制&quot;&gt;13.Android View 树的绘制&lt;/h4&gt;
&lt;p&gt;Adroid的UI界面都是由View和ViewGroup及其派生类组合而成的。View 树的绘制从顶向下逐层进行绘制。&lt;/p&gt;

&lt;h4 id=&quot;14低版本如何实现高版本功能及风格统一&quot;&gt;14.低版本如何实现高版本功能及风格统一。&lt;/h4&gt;
&lt;p&gt;引入android-support-v4.jar。自定义一些界面风格，从而在不用厂商生产的手机上达到一致的界面效果。&lt;/p&gt;

&lt;h4 id=&quot;15遇到过的难于解决的问题&quot;&gt;15.遇到过的难于解决的问题&lt;/h4&gt;
&lt;p&gt;视情况回答。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>提升自我的方法</title>
   <link href="http://www.panxw.com/read/self-improve-methods.html"/>
   <updated>2013-04-06T20:05:01+00:00</updated>
   <id>/read/self-improve-methods</id>
   <content type="html">&lt;p&gt;如下方面：&lt;br /&gt;
1、每天学习。&lt;br /&gt;
2、学习新语言。&lt;br /&gt;
3、打造你的灵感空间。&lt;br /&gt;
4、战胜你的恐惧。&lt;br /&gt;
5、升级你的技能。&lt;br /&gt;
6、给未来的自己写一封信。&lt;br /&gt;
7、承认自己的缺点。&lt;br /&gt;
8、立即行动。&lt;br /&gt;
9、向佩服的人学习。&lt;br /&gt;
10、减少在QQ上的时间。&lt;br /&gt;
11、培养一个新习惯。&lt;br /&gt;
12、让过去的过去。&lt;br /&gt;
13、帮助他人。&lt;br /&gt;
14、好好休息。&lt;br /&gt;
15、多多反省。&lt;br /&gt;
…&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>返回系统HOME桌面</title>
   <link href="http://www.panxw.com/android/back-home-code.html"/>
   <updated>2013-04-06T20:05:01+00:00</updated>
   <id>/android/back-home-code</id>
   <content type="html">&lt;p&gt;在程序里不关闭应用，返回到系统HOME桌面的代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Intent intent = new Intent();
intent.setAction(Intent.ACTION_MAIN);
intent.addCategory(Intent.CATEGORY_HOME);
startActivity(intent);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>让带EditText界面不聚集(无输入键盘弹出)</title>
   <link href="http://www.panxw.com/android/edittext-unfocus.html"/>
   <updated>2013-03-26T20:05:01+00:00</updated>
   <id>/android/edittext-unfocus</id>
   <content type="html">&lt;p&gt;如何让带EditText界面不聚集时无输入键盘弹出？ 在EditText建一0x0大小的布局：&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;android:orientation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vertical&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;LinearLayout&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0px&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0px&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:focusable=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:focusableInTouchMode=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;EditText&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;fill_parent&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:layout_height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;wrap_content&quot;&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;android:text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@string/hello&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/LinearLayout&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>读《暗时间》一书</title>
   <link href="http://www.panxw.com/read/about-shadow-time.html"/>
   <updated>2013-03-21T20:05:01+00:00</updated>
   <id>/read/about-shadow-time</id>
   <content type="html">&lt;h4 id=&quot;1前不久读了暗时间一书书中列举了暗时间的8个方面&quot;&gt;1.前不久读了《暗时间》一书，书中列举了暗时间的8个方面：&lt;/h4&gt;
&lt;p&gt;1,使用滞慢或陈旧的技术；&lt;br /&gt;
2,分心和发呆；&lt;br /&gt;
3,倦怠的疲惫；&lt;br /&gt;
4,看电邮，手机QQ，MSN成瘾；&lt;br /&gt;
5,交通（堵车）；&lt;br /&gt;
6,伪困难的决定；&lt;br /&gt;
7,在线阅读；&lt;br /&gt;
8,过度聊天。&lt;/p&gt;

&lt;h4 id=&quot;2问题来了&quot;&gt;2.问题来了&lt;/h4&gt;
&lt;p&gt;现代人或多或少都受到过上述问题的困扰，致使有时感觉啥也没做，一段时间就很快过去了。那么怎么把暗时间利用起来呢？&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;3应对方法&quot;&gt;3.应对方法&lt;/h4&gt;
&lt;p&gt;书中交代了3个主要方法：&lt;br /&gt;
1,迅速进入状态（即减少切换时间）；&lt;br /&gt;
2,长期保持专注状态；&lt;br /&gt;
3,具备超强的抗干扰能力（没有就需要培养了）。&lt;br /&gt;
前面2点是高效学习的两个重要习惯。&lt;br /&gt;
书中比较震惊一句：善于利用暗时间的人，可以无形中比别人多出很多实际时间，从而实际意义上能比别人多活很多年。&lt;/p&gt;

&lt;p&gt;真是太可怕了！&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>背景为shape selector的drawable的问题</title>
   <link href="http://www.panxw.com/android/shape-drawable.html"/>
   <updated>2013-03-14T20:05:01+00:00</updated>
   <id>/android/shape-drawable</id>
   <content type="html">&lt;p&gt;背景为selector(item state_pressed=”false” shape)时，里面的条目只能为selector(item state_pressed=”true” shape)，否则选中无效果。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;举例&quot;&gt;举例：&lt;/h4&gt;
&lt;p&gt;1.边框背景：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;selector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&amp;gt;&amp;lt;shape&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;stroke&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.8dp&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#d4d3d3&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;solid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#f3f4f4&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/solid&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;corners&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:radius=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;0.5dp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/shape&amp;gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.条目背景：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;selector&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:android=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://schemas.android.com/apk/res/android&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;item&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:state_pressed=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;shape&amp;gt;&lt;/span&gt;
			&lt;span class=&quot;nt&quot;&gt;&amp;lt;solid&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;android:color=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;#e6e6e6&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;nt&quot;&gt;&amp;lt;/shape&amp;gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/selector&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>让Android ProgressDialog在按返回键可dismiss</title>
   <link href="http://www.panxw.com/android/progress-dialog.html"/>
   <updated>2013-03-08T20:05:01+00:00</updated>
   <id>/android/progress-dialog</id>
   <content type="html">&lt;p&gt;让ProgressDialog可按返回键时dismiss，但空白区不dismiss：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;progressDialog.setCanelable(true);
progressDialog.setCanceledOnTouchOutside(false)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>让Android网络应用启动时升级检查</title>
   <link href="http://www.panxw.com/android/update-tips.html"/>
   <updated>2013-03-01T20:05:01+00:00</updated>
   <id>/android/update-tips</id>
   <content type="html">&lt;p&gt;Android网络应用开发中有遇到，业务接口后期调用时数据要加密传输，由于先前没在启动时升级检查，导致原来版本无法升级（只在登录后可升级），好在处于内部测试阶段。让Android网络应用启动时升级检查就可以避免上述情况发生，要点：&lt;br /&gt;
1、让Android应用升级接口独立于其它业务接口；&lt;br /&gt;
2、在应用启动时进行升级检查，让用户随时可升级到最新版本。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>消除Animation残余线条</title>
   <link href="http://www.panxw.com/android/animation-noline.html"/>
   <updated>2013-02-26T20:05:01+00:00</updated>
   <id>/android/animation-noline</id>
   <content type="html">&lt;p&gt;消除Animation残余线条办法：&lt;/p&gt;
&lt;h4 id=&quot;1继承translateanimation或rotateanimation在applytransformation中刷新动画parentview的界面如&quot;&gt;1,继承TranslateAnimation或RotateAnimation，在applyTransformation中刷新动画parentView的界面。如：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;private final class MyTranslateAnimation extends TranslateAnimation {
		private View backgroundView;

		public MyTranslateAnimation(View backgroundView, int fromXType, float fromXValue, int toXType, float toXValue,
				int fromYType, float fromYValue, int toYType, float toYValue) {
			super(fromXType, fromXValue, toXType, toXValue, fromYType, fromYValue, toYType, toYValue);
			this.backgroundView = backgroundView;
		}

		@Override
		protected void applyTransformation(float interpolatedTime, Transformation t) {
			super.applyTransformation(interpolatedTime, t);
			backgroundView.postInvalidate();
		}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;2调用&quot;&gt;2,调用：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TranslateAnimation cardAnimation = new MyTranslateAnimation(backgroundView, Animation.RELATIVE_TO_PARENT, 0.01f,
				Animation.RELATIVE_TO_PARENT, 0.35f, Animation.RELATIVE_TO_PARENT, 0.1f, Animation.RELATIVE_TO_PARENT,
				0.1f);
cardAnimation.setDuration(2000);
cardAnimation.setRepeatCount(Animation.INFINITE);
cardAnimation.setRepeatMode(Animation.REVERSE);
imageView.setAnimation(cardAnimation);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>一个鸡蛋的故事</title>
   <link href="http://www.panxw.com/read/an-egg-story.html"/>
   <updated>2013-02-05T20:05:01+00:00</updated>
   <id>/read/an-egg-story</id>
   <content type="html">&lt;p&gt;摘自某文摘一段话：&lt;br /&gt;
鸡蛋从外打破是食物，从内打破是生命。人生亦是，从外打破是压力，从内打破是成长。&lt;br /&gt;
如果你等待别人从外打破，那么你注定成为别人的食物，如果能让自己从内打破，那么你会发现自己的成长相当于一种重生。&lt;/p&gt;

&lt;p&gt;读完这段话，有何感想？&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android AnimationDrawable实现GIF效果动画</title>
   <link href="http://www.panxw.com/android/frame-ainim.html"/>
   <updated>2013-02-05T20:05:01+00:00</updated>
   <id>/android/frame-ainim</id>
   <content type="html">&lt;p&gt;利用AnimationDrawable实现类似gif效果的动画：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;final AnimationDrawable drawable = new AnimationDrawable();
drawable.addFrame(activity.getResources().getDrawable(R.drawable.kaiguan), 750);//添加图片帧到AnimationDrawable
drawable.addFrame(activity.getResources().getDrawable(R.drawable.kaiguan2), 1250);
drawable.setOneShot(false);//设置为循环播放
ImageView imageView = (ImageView)findViewById(R.id.imageView);
imageView.setImageDrawable(drawable);//AnimationDrawable对象给imageView
drawable.start();//动画播放
drawable.stop();//动画停止
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>ListView与条目显示相关问题解决</title>
   <link href="http://www.panxw.com/android/listview-faqs.html"/>
   <updated>2012-12-31T20:05:01+00:00</updated>
   <id>/android/listview-faqs</id>
   <content type="html">&lt;p&gt;1.对一般布局如(LinearLayout)设置selector后,点击没有选中的效果，可设置其android:clickable=”true”即可。&lt;br /&gt;
2.对item_layout.xml设置selector后点击效果无效反而为系统效果时。可能是selector中颜色值使用了透明度，这是不行的，不能直接用带透明度的颜色。也可以把item_layout.xml中的selector换到ListView设置listSelector中去。&lt;!-- more --&gt;&lt;br /&gt;
3.item_layout设置了高度却不起作用，那就让高度wrap_content，添加minHeight=”50dp”这样的设置吧。&lt;br /&gt;
4.item_layout中若有Button或CheckBox之类的控件，设置selector是不起作用的，需对Button或CheckBox设置android:focusable=”false”才行。&lt;br /&gt;
5.关于更改已有ListView中的某条目显示时，需要通过更改ListView Adapter所使用的原始list数据，再调用Adapter的notifyDatesetChanged来刷新界面才行，当然Adapter的getView操作要能重新适配数据才行。&lt;br /&gt;
6.ListView设置了divider及dividerHeight，但当数据不够一页时最下一条无下划线，可设置ListView为android:layout_height=”fill_parent”即可。&lt;br /&gt;
7.GridView如果不设置listSelector则在某些手机上，其四周会出现边框。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Resource下图片合成(LayerDrawable)</title>
   <link href="http://www.panxw.com/android/layer-drawable.html"/>
   <updated>2012-12-21T20:05:01+00:00</updated>
   <id>/android/layer-drawable</id>
   <content type="html">&lt;h4 id=&quot;1给一个背景背景中的一部分可变的以下方法可以从resouce中合成动态改变userimg图片&quot;&gt;1.给一个背景,背景中的一部分可变的,以下方法可以从Resouce中合成(动态改变userimg图片):&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public LayerDrawable test(Context context, dynamicImg) {
	LayerDrawable layerDrawable =(LayerDrawable) context.getResources().getDrawable(R.drawable.layerlist);
	Drawable drawable = context.getResources().getDrawable(R.drawable.ic_launcher);
	layerDrawable.setDrawableByLayerId(R.id.userimage, dynamicImg);
	return layerDrawable;
}
```&amp;lt;!-- more --&amp;gt;

#### 2.drawable下的layerlist.xml文件:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;
    &lt;item android:drawable=&quot;@drawable/ic_launcher&quot; /&gt;
    &lt;item android:drawable=&quot;@drawable/ic_launcher&quot; android:id=&quot;@+id/userimage&quot; android:left=&quot;10dp&quot; android:right=&quot;10dp&quot; android:bottom=&quot;10dp&quot; /&gt;
&lt;/layer-list&gt;
&lt;p&gt;```&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll常用列表，标签代码</title>
   <link href="http://www.panxw.com/web/jekyll-common-code.html"/>
   <updated>2012-12-15T20:05:01+00:00</updated>
   <id>/web/jekyll-common-code</id>
   <content type="html">&lt;h4 id=&quot;1分类categorys&quot;&gt;1.分类(Categorys)&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
			&amp;lt;a href=&quot;/categories.html#read&quot;&amp;gt;
			
				read
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[10]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#linux&quot;&amp;gt;
			
				linux
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[10]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#android&quot;&amp;gt;
			
				android
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[45]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#web&quot;&amp;gt;
			
			&amp;lt;b&amp;gt;web&amp;lt;/b&amp;gt;
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[21]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#program&quot;&amp;gt;
			
				program
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[9]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#git&quot;&amp;gt;
			
				git
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[6]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#vps&quot;&amp;gt;
			
				vps
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[4]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#react&quot;&amp;gt;
			
				react
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
		, 

			&amp;lt;a href=&quot;/categories.html#other&quot;&amp;gt;
			
				other
			
			&amp;lt;/a&amp;gt;
			&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
		, 

```&amp;lt;!-- more --&amp;gt;

#### 2.分类显示列表
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&quot;home&quot;&gt;
	
	
	&lt;a name=&quot;read&quot;&gt;&lt;h3&gt;read(10)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2015-03-01 &lt;a href=&quot;/read/read-design-principle-book.html&quot;&gt;写给大家看的设计书[书摘]&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-05-15 &lt;a href=&quot;/read/six-relationship-model.html&quot;&gt;人际交往的六种模式&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-04-06 &lt;a href=&quot;/read/self-improve-methods.html&quot;&gt;提升自我的方法&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-03-21 &lt;a href=&quot;/read/about-shadow-time.html&quot;&gt;读《暗时间》一书&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-02-05 &lt;a href=&quot;/read/an-egg-story.html&quot;&gt;一个鸡蛋的故事&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-03-12 &lt;a href=&quot;/read/work-dna.html&quot;&gt;工作DNA警句&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-08-01 &lt;a href=&quot;/read/body-foster-song.html&quot;&gt;养气歌&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-03-01 &lt;a href=&quot;/read/it-engineer-way.html&quot;&gt;IT Enginner or Code Typist&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-01-08 &lt;a href=&quot;/read/learn-process.html&quot;&gt;学习方法及过程&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-01-01 &lt;a href=&quot;/read/which-more-important.html&quot;&gt;人生什么更重要？&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;linux&quot;&gt;&lt;h3&gt;linux(10)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2017-06-12 &lt;a href=&quot;/linux/batch-rame-scripts.html&quot;&gt;批量文件加前缀的shell脚本&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-08-20 &lt;a href=&quot;/linux/the-vagrant-trail.html&quot;&gt;Vagrant入手记&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-03-11 &lt;a href=&quot;/linux/debian-ruby-setup.html&quot;&gt;Debian/Linux ruby setup&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-03-10 &lt;a href=&quot;/linux/install-debian-windows.html&quot;&gt;Windows安装Debian Linux步骤&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-06-25 &lt;a href=&quot;/linux/ucos-ii-setup.html&quot;&gt;Windows XP下uCOS-II开发环境建立&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-05-20 &lt;a href=&quot;/linux/linux-kernel26-faqs.html&quot;&gt;2.6内核驱动编译程序所遇问题解&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-04-08 &lt;a href=&quot;/linux/boa-arm-porting.html&quot;&gt;嵌入式Web服务器boa在ARM平台的移植&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-04-05 &lt;a href=&quot;/linux/cramfs-build-step.html&quot;&gt;Cramfs文件系统的制作&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-03-20 &lt;a href=&quot;/linux/px270-arm-porting.html&quot;&gt;Widows下PXA270开发板的Linux系统的移植过程&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-03-02 &lt;a href=&quot;/linux/nfs-mount-fag.html&quot;&gt;NFS挂载记事&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;android&quot;&gt;&lt;h3&gt;android(45)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2015-09-12 &lt;a href=&quot;/android/tv-focus-points.html&quot;&gt;Android TV开发中特定焦点定位&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-05-13 &lt;a href=&quot;/android/android-app-safe.html&quot;&gt;Android App安全性加强策略&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-01-05 &lt;a href=&quot;/android/umeng-package-sign.html&quot;&gt;友盟统计正式包无数据问题&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-12-30 &lt;a href=&quot;/android/cocos-js-learn.html&quot;&gt;Cocos JS 布局及控件相关&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-10-22 &lt;a href=&quot;/android/cocos2dx-java-with-javascript.html&quot;&gt;cocos2d javascript与java互相调用途径&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-10-12 &lt;a href=&quot;/android/cocos-multi-resolution-support.html&quot;&gt;Cocos2d 多屏适配文章&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-09-20 &lt;a href=&quot;/android/cocos-ide-steps.html&quot;&gt;Cocos IDE开发步骤&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-09-16 &lt;a href=&quot;/android/eclipse-conversion-error.html&quot;&gt;Eclipse签名打包遇“Conversion to Dalvik format...”处理&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-09-01 &lt;a href=&quot;/android/cocos2d-js-tutorial.html&quot;&gt;Cocos2d-JS steps under web and Android Platform.&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-08-28 &lt;a href=&quot;/android/android-json-trouble.html&quot;&gt;Android JSONObject解析异常问题&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-06-21 &lt;a href=&quot;/android/about-android-view.html&quot;&gt;Android View及ViewGroup知识&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-06-15 &lt;a href=&quot;/android/android-volley-tool.html&quot;&gt;基于Volley的网络请求工具&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-06-12 &lt;a href=&quot;/android/android-save-restore.html&quot;&gt;Android数据保存与恢复&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-03-28 &lt;a href=&quot;/android/android-rom-about.html&quot;&gt;Android ROM包制作及刷机过程简介&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-03-04 &lt;a href=&quot;/android/project-startup.html&quot;&gt;Android必要模块－－升级与公告&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-02-20 &lt;a href=&quot;/android/android-cocos2d-tutorial.html&quot;&gt;Android Cocos2dx 编译过程&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-10-20 &lt;a href=&quot;/android/listview-selector.html&quot;&gt;Android GridView去边距&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-08-10 &lt;a href=&quot;/android/service-destroy.html&quot;&gt;Android退出前的stopService&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-06-20 &lt;a href=&quot;/android/ndk-env-setup.html&quot;&gt;Android NDK 编译&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-06-04 &lt;a href=&quot;/android/tabhost-switch.html&quot;&gt;TabActivity子Activity以代码进行切换&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-05-06 &lt;a href=&quot;/android/android-interview-faqs.html&quot;&gt;Android常见问题汇集&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-04-06 &lt;a href=&quot;/android/back-home-code.html&quot;&gt;返回系统HOME桌面&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-03-26 &lt;a href=&quot;/android/edittext-unfocus.html&quot;&gt;让带EditText界面不聚集(无输入键盘弹出)&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-03-14 &lt;a href=&quot;/android/shape-drawable.html&quot;&gt;背景为shape selector的drawable的问题&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-03-08 &lt;a href=&quot;/android/progress-dialog.html&quot;&gt;让Android ProgressDialog在按返回键可dismiss&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-03-01 &lt;a href=&quot;/android/update-tips.html&quot;&gt;让Android网络应用启动时升级检查&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-02-26 &lt;a href=&quot;/android/animation-noline.html&quot;&gt;消除Animation残余线条&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-02-05 &lt;a href=&quot;/android/frame-ainim.html&quot;&gt;Android AnimationDrawable实现GIF效果动画&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-12-31 &lt;a href=&quot;/android/listview-faqs.html&quot;&gt;ListView与条目显示相关问题解决&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-12-21 &lt;a href=&quot;/android/layer-drawable.html&quot;&gt;Android Resource下图片合成(LayerDrawable)&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-12-10 &lt;a href=&quot;/android/simple-oauth-model.html&quot;&gt;基于Android+WebView的OAuth2.0认证过程分析及简单模型实现&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-06-12 &lt;a href=&quot;/android/parcelable-usage.html&quot;&gt;Android 之Parcelable使用例子&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-06-05 &lt;a href=&quot;/android/perst-try.html&quot;&gt;Perst在Android中的简单应用&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-05-21 &lt;a href=&quot;/android/app-dev-sugestions.html&quot;&gt;给移动应用开发者的建议&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-03-02 &lt;a href=&quot;/android/result-code.html&quot;&gt;Android startActivityForResult返回时需要注意的&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-12-20 &lt;a href=&quot;/android/custom-spinner.html&quot;&gt;Android Spinner自定义适配器&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-12-01 &lt;a href=&quot;/android/android-jin-log.html&quot;&gt;android jni c/c++打印输出&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-11-22 &lt;a href=&quot;/android/dialog-style-activity.html&quot;&gt;Android Dialog风格Activity&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-11-10 &lt;a href=&quot;/android/dialog-hold.html&quot;&gt;Android 点按钮不让AlertDialog退出方法&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-10-24 &lt;a href=&quot;/android/eclipse-ndk-build.html&quot;&gt;Windows下eclipse中添加NDK Builder&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-10-22 &lt;a href=&quot;/android/textedit-set-password.html&quot;&gt;Android EditText控件的密码输入框可见性设置&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-10-22 &lt;a href=&quot;/android/google-map-usage.html&quot;&gt;Google Map API of Android 的使用&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-10-22 &lt;a href=&quot;/android/apk-parse-err.html&quot;&gt;解析错误－解析包时出现问题－解决方法&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2011-10-22 &lt;a href=&quot;/android/android-install-uninstall.html&quot;&gt;Android调用系统安装/卸载apk过程&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-10-01 &lt;a href=&quot;/android/android-env-setup.html&quot;&gt;Android开发环境搭建 &lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;web&quot;&gt;&lt;h3&gt;web(21)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2017-07-06 &lt;a href=&quot;/web/neteasy-gentie-stop.html&quot;&gt;网易云跟贴8月1日将停止服务，换来必力!&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2017-04-22 &lt;a href=&quot;/web/about-blog-architure.html&quot;&gt;谈谈我的博客是如何构建与发布的&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-08-28 &lt;a href=&quot;/web/nodejs-server-transfer.html&quot;&gt;VPS服务器环境切换至Node.js&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-07-25 &lt;a href=&quot;/web/nginx-multi-domain.html&quot;&gt;基于Nginx的Linux VPS 多域名空间配置&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-05-28 &lt;a href=&quot;/web/site-enable-https.html&quot;&gt;本博客已开启安全(https)浏览&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-04-16 &lt;a href=&quot;/web/php-get-access-db.html&quot;&gt;php加入access数据库支持方法&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-04-10 &lt;a href=&quot;/web/block-ip-by-htaccess.html&quot;&gt;阿里弹性Web托管屏蔽IP的.htaccess设置&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-03-15 &lt;a href=&quot;/web/my-jekyll-journey.html&quot;&gt;谈谈我的Jekyll建站之旅&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-03-06 &lt;a href=&quot;/web/fasten-godaddy-by-cloudfront.html&quot;&gt;利用CloudFront为Godaddy主机上的网站加速&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-03-05 &lt;a href=&quot;/web/jekyll-column-list-output.html&quot;&gt;Jekyll输出特定栏目文章列表的方法&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-03-02 &lt;a href=&quot;/web/ububtu-ruby2-install.html&quot;&gt;Ubuntu下Ruby1.9/2.0版本切换&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-02-28 &lt;a href=&quot;/web/godaddy-try-summary.html&quot;&gt;试用Godaddy虚拟主机总结&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-02-28 &lt;a href=&quot;/web/cloudflare-vs-incapsula-cdn.html&quot;&gt;CloudFlare与Incapsula免费版CDN实测对比&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-08-25 &lt;a href=&quot;/web/ubuntu-nginx-java-php-serve.html&quot;&gt;Ubuntu下tomcat+nginx服务器架设小记&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-12-20 &lt;a href=&quot;/web/http-protocol-review.html&quot;&gt;HTTP请求/响应构成&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-03-05 &lt;a href=&quot;/web/oray-win7-try.html&quot;&gt;Win7花生壳公网映射80端口的问题&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-07-12 &lt;a href=&quot;/web/appfog-javaweb-step.html&quot;&gt;Appfog Java Web操作指南&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-06-11 &lt;a href=&quot;/web/php-learn-test.html&quot;&gt;PHP学习入门级练习&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-12-15 &lt;a href=&quot;/web/jekyll-common-code.html&quot;&gt;Jekyll常用列表，标签代码&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-12-09 &lt;a href=&quot;/web/jekyll-blog-guide.html&quot;&gt;Windows下Jekyll指南&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2010-10-15 &lt;a href=&quot;/web/css-div-standerd.html&quot;&gt;Web标准设计规范(XHTML+CSS)&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;program&quot;&gt;&lt;h3&gt;program(9)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2015-06-30 &lt;a href=&quot;/program/base64-outbuffer-length.html&quot;&gt;C语言Base64输出buffer大小计算&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-05-11 &lt;a href=&quot;/program/java-thread-model.html&quot;&gt;Java线程模型的规则与共享变量可见性&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-12-27 &lt;a href=&quot;/program/get-latest-msysgit.html&quot;&gt;Windows下msysgit最新下载地址&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-12-13 &lt;a href=&quot;/program/maven-simple-steps.html&quot;&gt;Manven构建基本步骤&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-07-10 &lt;a href=&quot;/program/design-patterns.html&quot;&gt;面向对像设计模式相关&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-04-15 &lt;a href=&quot;/program/double-lock-singleton.html&quot;&gt;双重检查加锁单例&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2013-06-19 &lt;a href=&quot;/program/common-algorithms-site.html&quot;&gt;DES,ASE等常见算法网站&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-05-29 &lt;a href=&quot;/program/java-wait-notify.html&quot;&gt;synchronized方法、wait/notify与监视器&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-05-01 &lt;a href=&quot;/program/three-level-arch.html&quot;&gt;三层架构是个啥？&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;git&quot;&gt;&lt;h3&gt;git(6)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2017-06-15 &lt;a href=&quot;/git/git-submodule-usage.html&quot;&gt;git submodule(子模块)基本用法&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-08-06 &lt;a href=&quot;/git/git-server-on-aws.html&quot;&gt;一步一步在AWS EC2(Ubuntu)上搭建git服务&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-05-09 &lt;a href=&quot;/git/git-multi-remote.html&quot;&gt;基于bitbucket和github构建私有+开源一体的代码中心&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-11-12 &lt;a href=&quot;/git/on-git-rebase-merge.html&quot;&gt;Git的Merge和Rebase&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-09-13 &lt;a href=&quot;/git/git-branch-steps.html&quot;&gt;git分支开发、合并、删除等主要命令&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2012-11-26 &lt;a href=&quot;/git/egit-rebase-step.html&quot;&gt;eclipse下Egit rebase 步骤&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;vps&quot;&gt;&lt;h3&gt;vps(4)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2017-05-06 &lt;a href=&quot;/vps/host-move-to-google-clould.html&quot;&gt;站点服务迁移到了Google Cloud&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2017-03-15 &lt;a href=&quot;/vps/about-banwagon-traps.html&quot;&gt;关于再次购买班瓦工VPS的坑！&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2015-06-28 &lt;a href=&quot;/vps/good-vps-list.html&quot;&gt;推荐几个不错的VPS主机&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2014-07-25 &lt;a href=&quot;/vps/chrome-honx-vpn.html&quot;&gt;推荐几个不错的VPN&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;react&quot;&gt;&lt;h3&gt;react(2)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2016-06-28 &lt;a href=&quot;/react/webpack-basic-usage.html&quot;&gt;webpack打包入门教程&lt;/a&gt;&lt;/p&gt;
		
		 &lt;p&gt;2016-06-10 &lt;a href=&quot;/react/reac-native-envsetup.html&quot;&gt;React Native 开发环境搭建过程&lt;/a&gt;&lt;/p&gt;
		
	
	
	
	&lt;a name=&quot;other&quot;&gt;&lt;h3&gt;other(1)&lt;/h3&gt;&lt;/a&gt;
		
		 &lt;p&gt;2017-06-02 &lt;a href=&quot;/other/macmini-font-adjustfy.html&quot;&gt;Mac mini接显示器视觉模糊调节&lt;/a&gt;&lt;/p&gt;
		
	
	
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 3.标签(Tags)	
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;		&amp;lt;a href=&quot;/tags.html#人生&quot;&amp;gt;
		
			人生
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#NFS&quot;&amp;gt;
		
			NFS
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#移植&quot;&amp;gt;
		
			移植
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Cramfs&quot;&amp;gt;
		
			Cramfs
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#linux&quot;&amp;gt;
		
			linux
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#嵌入式&quot;&amp;gt;
		
			嵌入式
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#内核驱动&quot;&amp;gt;
		
			内核驱动
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Android&quot;&amp;gt;
		
			Android
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[3]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#CSS&quot;&amp;gt;
		
			CSS
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#学习&quot;&amp;gt;
		
			学习
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Enginner&quot;&amp;gt;
		
			Enginner
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#阅读&quot;&amp;gt;
		
			阅读
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#养气歌&quot;&amp;gt;
		
			养气歌
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#apk&quot;&amp;gt;
		
			apk
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Google&quot;&amp;gt;
		
			Google
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Map&quot;&amp;gt;
		
			Map
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#EditText&quot;&amp;gt;
		
			EditText
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#eclipse&quot;&amp;gt;
		
			eclipse
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[3]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#NDK&quot;&amp;gt;
		
			NDK
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#AlertDialog&quot;&amp;gt;
		
			AlertDialog
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Dialog&quot;&amp;gt;
		
			Dialog
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#jni&quot;&amp;gt;
		
			jni
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Spinner&quot;&amp;gt;
		
			Spinner
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#工作DNA&quot;&amp;gt;
		
			工作DNA
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#三层架构&quot;&amp;gt;
		
			三层架构
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#应用开发&quot;&amp;gt;
		
			应用开发
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#java&quot;&amp;gt;
		
			java
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#同步&quot;&amp;gt;
		
			同步
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Perst&quot;&amp;gt;
		
			Perst
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Parcelable&quot;&amp;gt;
		
			Parcelable
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Egit&quot;&amp;gt;
		
			Egit
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Jekyll&quot;&amp;gt;
		
			&amp;lt;b&amp;gt;Jekyll&amp;lt;/b&amp;gt;
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[5]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#OAuth2.0&quot;&amp;gt;
		
			OAuth2.0
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#标签&quot;&amp;gt;
		
			&amp;lt;b&amp;gt;标签&amp;lt;/b&amp;gt;
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#LayerDrawable&quot;&amp;gt;
		
			LayerDrawable
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ListView&quot;&amp;gt;
		
			ListView
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#AnimationDrawable&quot;&amp;gt;
		
			AnimationDrawable
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#哲理&quot;&amp;gt;
		
			哲理
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Animation&quot;&amp;gt;
		
			Animation
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#TranslateAnimation&quot;&amp;gt;
		
			TranslateAnimation
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#升级检查&quot;&amp;gt;
		
			升级检查
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ProgressDialog&quot;&amp;gt;
		
			ProgressDialog
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#selector&quot;&amp;gt;
		
			selector
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#暗时间&quot;&amp;gt;
		
			暗时间
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#不聚集&quot;&amp;gt;
		
			不聚集
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#HOME&quot;&amp;gt;
		
			HOME
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#自我提升&quot;&amp;gt;
		
			自我提升
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Android面试&quot;&amp;gt;
		
			Android面试
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#人际交往&quot;&amp;gt;
		
			人际交往
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#TabActivity&quot;&amp;gt;
		
			TabActivity
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#PHP&quot;&amp;gt;
		
			PHP
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Mysql&quot;&amp;gt;
		
			Mysql
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#算法&quot;&amp;gt;
		
			算法
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#cygwin&quot;&amp;gt;
		
			cygwin
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Appfog&quot;&amp;gt;
		
			Appfog
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Service&quot;&amp;gt;
		
			Service
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#GridView&quot;&amp;gt;
		
			GridView
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#cocos2dx&quot;&amp;gt;
		
			cocos2dx
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#应用升级&quot;&amp;gt;
		
			应用升级
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#公告&quot;&amp;gt;
		
			公告
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Win7&quot;&amp;gt;
		
			Win7
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#花生壳&quot;&amp;gt;
		
			花生壳
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Debian&quot;&amp;gt;
		
			Debian
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Windows&quot;&amp;gt;
		
			Windows
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ruby&quot;&amp;gt;
		
			ruby
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#刷机&quot;&amp;gt;
		
			刷机
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ROM&quot;&amp;gt;
		
			ROM
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Java&quot;&amp;gt;
		
			Java
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#单例&quot;&amp;gt;
		
			单例
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#数据恢复&quot;&amp;gt;
		
			数据恢复
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Volley&quot;&amp;gt;
		
			Volley
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#View&quot;&amp;gt;
		
			View
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ViewGroup&quot;&amp;gt;
		
			ViewGroup
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#面向对像&quot;&amp;gt;
		
			面向对像
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#设计模式&quot;&amp;gt;
		
			设计模式
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#VPN&quot;&amp;gt;
		
			VPN
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#JSONObject&quot;&amp;gt;
		
			JSONObject
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Cocos2d&quot;&amp;gt;
		
			Cocos2d
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#git分支&quot;&amp;gt;
		
			git分支
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#合并&quot;&amp;gt;
		
			合并
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#删除&quot;&amp;gt;
		
			删除
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#cocos2d&quot;&amp;gt;
		
			cocos2d
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[3]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#git&quot;&amp;gt;
		
			git
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[6]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#merge&quot;&amp;gt;
		
			merge
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#rebase&quot;&amp;gt;
		
			rebase
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#manven&quot;&amp;gt;
		
			manven
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#HTTP&quot;&amp;gt;
		
			HTTP
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#cocos2d-js&quot;&amp;gt;
		
			cocos2d-js
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#友盟统计&quot;&amp;gt;
		
			友盟统计
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#设计&quot;&amp;gt;
		
			设计
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#设计书&quot;&amp;gt;
		
			设计书
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#github&quot;&amp;gt;
		
			github
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#bitbucket&quot;&amp;gt;
		
			bitbucket
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#线程&quot;&amp;gt;
		
			线程
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#模型&quot;&amp;gt;
		
			模型
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#App安全&quot;&amp;gt;
		
			App安全
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#vps&quot;&amp;gt;
		
			vps
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#主机&quot;&amp;gt;
		
			主机
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#C语言&quot;&amp;gt;
		
			C语言
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Base64&quot;&amp;gt;
		
			Base64
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#buffer&quot;&amp;gt;
		
			buffer
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#aws&quot;&amp;gt;
		
			aws
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#git服务&quot;&amp;gt;
		
			git服务
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#nginx&quot;&amp;gt;
		
			nginx
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#vagrant&quot;&amp;gt;
		
			vagrant
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#server&quot;&amp;gt;
		
			server
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#焦点&quot;&amp;gt;
		
			焦点
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#定位&quot;&amp;gt;
		
			定位
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#TV&quot;&amp;gt;
		
			TV
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#CloudFlare&quot;&amp;gt;
		
			CloudFlare
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Incapsula&quot;&amp;gt;
		
			Incapsula
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#CDN&quot;&amp;gt;
		
			CDN
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#godaddy&quot;&amp;gt;
		
			godaddy
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#虚拟主机&quot;&amp;gt;
		
			虚拟主机
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ubuntu&quot;&amp;gt;
		
			ubuntu
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#ruby2&quot;&amp;gt;
		
			ruby2
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#栏目列表&quot;&amp;gt;
		
			栏目列表
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#CloudFront&quot;&amp;gt;
		
			CloudFront
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Godaddy&quot;&amp;gt;
		
			Godaddy
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#建站&quot;&amp;gt;
		
			建站
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#htaccess&quot;&amp;gt;
		
			htaccess
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#弹性Web托管&quot;&amp;gt;
		
			弹性Web托管
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#php&quot;&amp;gt;
		
			php
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#access&quot;&amp;gt;
		
			access
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#博客&quot;&amp;gt;
		
			博客
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#https&quot;&amp;gt;
		
			https
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#SSL&quot;&amp;gt;
		
			SSL
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#React&quot;&amp;gt;
		
			React
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Native&quot;&amp;gt;
		
			Native
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#环境搭建&quot;&amp;gt;
		
			环境搭建
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#webpack&quot;&amp;gt;
		
			webpack
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#打包&quot;&amp;gt;
		
			打包
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#入门教程&quot;&amp;gt;
		
			入门教程
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[2]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Nginx&quot;&amp;gt;
		
			Nginx
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#VPS&quot;&amp;gt;
		
			VPS
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[3]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#多域名&quot;&amp;gt;
		
			多域名
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Node.js&quot;&amp;gt;
		
			Node.js
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#班瓦工&quot;&amp;gt;
		
			班瓦工
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#webhook&quot;&amp;gt;
		
			webhook
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#google&quot;&amp;gt;
		
			google
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#cloud&quot;&amp;gt;
		
			cloud
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#Mac&quot;&amp;gt;
		
			Mac
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#mini&quot;&amp;gt;
		
			mini
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#显示器&quot;&amp;gt;
		
			显示器
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#模糊&quot;&amp;gt;
		
			模糊
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#批量&quot;&amp;gt;
		
			批量
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#文件&quot;&amp;gt;
		
			文件
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#前缀&quot;&amp;gt;
		
			前缀
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#shell脚本&quot;&amp;gt;
		
			shell脚本
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#submodule&quot;&amp;gt;
		
			submodule
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#子模块&quot;&amp;gt;
		
			子模块
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#网易&quot;&amp;gt;
		
			网易
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#云跟贴&quot;&amp;gt;
		
			云跟贴
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,

		&amp;lt;a href=&quot;/tags.html#停止服务&quot;&amp;gt;
		
			停止服务
		
		&amp;lt;/a&amp;gt;
		&amp;lt;sup&amp;gt;[1]&amp;lt;/sup&amp;gt;
	,
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 4.Recent Posts
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;ul class=&quot;posts&quot;&gt;
	
	&lt;li&gt;&lt;span&gt;06 Jul 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/web/neteasy-gentie-stop.html&quot;&gt;网易云跟贴8月1日将停止服务，换来必力!&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;15 Jun 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/git/git-submodule-usage.html&quot;&gt;git submodule(子模块)基本用法&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;12 Jun 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/linux/batch-rame-scripts.html&quot;&gt;批量文件加前缀的shell脚本&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;02 Jun 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/other/macmini-font-adjustfy.html&quot;&gt;Mac mini接显示器视觉模糊调节&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;06 May 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/vps/host-move-to-google-clould.html&quot;&gt;站点服务迁移到了Google Cloud&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;22 Apr 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/web/about-blog-architure.html&quot;&gt;谈谈我的博客是如何构建与发布的&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;15 Mar 2017&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/vps/about-banwagon-traps.html&quot;&gt;关于再次购买班瓦工VPS的坑！&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;28 Aug 2016&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/web/nodejs-server-transfer.html&quot;&gt;VPS服务器环境切换至Node.js&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;25 Jul 2016&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/web/nginx-multi-domain.html&quot;&gt;基于Nginx的Linux VPS 多域名空间配置&lt;/a&gt;&lt;/li&gt;
	
	&lt;li&gt;&lt;span&gt;28 Jun 2016&lt;/span&gt;&amp;raquo;&lt;a href=&quot;/react/webpack-basic-usage.html&quot;&gt;webpack打包入门教程&lt;/a&gt;&lt;/li&gt;
	
&lt;/ul&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 5.分页显示
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- This loops through the paginated posts --&gt;

&lt;div style=&quot;height:16px&quot;&gt;&lt;/div&gt;

&lt;!-- Pagination links --&gt;
&lt;div class=&quot;pagination&quot;&gt;
  
    &lt;span class=&quot;previous&quot;&gt;Previous&lt;/span&gt;
  
  &lt;span class=&quot;page_number &quot;&gt;Page:  of &lt;/span&gt;
  
    &lt;span class=&quot;next &quot;&gt;Next&lt;/span&gt;
  
&lt;/div&gt;
&lt;p&gt;```&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>基于Android+WebView的OAuth2.0认证过程分析及简单模型实现</title>
   <link href="http://www.panxw.com/android/simple-oauth-model.html"/>
   <updated>2012-12-10T20:05:01+00:00</updated>
   <id>/android/simple-oauth-model</id>
   <content type="html">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;A simple oauthv2 model for android by webview
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;一以androidwebview为例简要说明一下oauth20认证授权过程&quot;&gt;一、以Android+WebView为例，简要说明一下OAuth2.0认证授权过程：&lt;/h4&gt;
&lt;p&gt;1，以在开放平台注册应用的appId,appSecret,callbackUrl，组装认证url，以WebView为桥梁，向开放平台认证中心发起认证请求。&lt;br /&gt;
2，认证中心判断应用来源，合法则跳转到用户授权界面(网页)，用户输入帐号及密码并同意授权则向认证中心发起授权。&lt;br /&gt;
3，认证中心对授权请求进行处理，以callbackUrl加参数的方式Rediret，这时拦截Rediret url后附带的参数即可知认证结果。&lt;br /&gt;
4，认证成功将获得open_id，access_token，refresh_token，expire_time等参数，用这些参数就可以向开放平台的业务层接口发起请求了。&lt;/p&gt;

&lt;p&gt;注：开放平台各异，OAuth2.0中appSecret也可能没用到，也不一定都返回了open_id这东西。&lt;/p&gt;

&lt;h4 id=&quot;二测试&quot;&gt;二、测试&lt;/h4&gt;
&lt;p&gt;运行apk后即可模拟认证授权，输入admin,888888就可以授权成功了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Windows下Jekyll指南</title>
   <link href="http://www.panxw.com/web/jekyll-blog-guide.html"/>
   <updated>2012-12-09T20:05:01+00:00</updated>
   <id>/web/jekyll-blog-guide</id>
   <content type="html">&lt;p&gt;提示：尽量用1.9.x版本的RubyInstaller，已含运行Jekyll所需的yajl依赖包。RubyInstallerv2.0以上版本需自行安装yajl-ruby，容易出错。&lt;/p&gt;

&lt;h4 id=&quot;一安装ruby执行环境&quot;&gt;一、安装Ruby执行环境&lt;/h4&gt;
&lt;p&gt;rubyinstaller-1.9.3-p392.exe,安装，很简单。&lt;br /&gt;
DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe，解压到C:\DevKit，然后cmd进入该目录执行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby dk.rb init
ruby dk.rb review
ruby dk.rb install
ruby --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;输出ruby 1.9.3p392 (2013-02-22) [i386-mingw32]则表明Ruby安装成功。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;二安装rdiscount及jekyll&quot;&gt;二、安装Rdiscount及Jekyll&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install rdiscount
gem install jekyll
jekyll --version
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;输出类似Jekyll 0.12.1信息则Jekyll安装成功。&lt;/p&gt;

&lt;h4 id=&quot;三执行jekyll&quot;&gt;三、执行Jekyll&lt;/h4&gt;
&lt;p&gt;进入Jekyll所在目录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;jekyll --server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;浏览器输入http://localhost:4000/看到设置的主页则Jekyll运行成功。&lt;/p&gt;

&lt;h4 id=&quot;备注&quot;&gt;备注：&lt;/h4&gt;
&lt;p&gt;Jekyll网站文件最好以UTF-8无BOM格式存储。&lt;br /&gt;
Jekyll运行报invalid byte sequencd in GBK时，可修改jekyll安装目录下convertible.rb第28行为self.content = File.read(File.join(base, name),:encoding=&amp;gt;”utf-8”)即可。(C:\Ruby193\lib\ruby\gems\1.9.1\gems\jekyll-0.12.1\lib\jekyll\convertible.rb)。&lt;br /&gt;
Jekyll运行报Liquid error: incompatible character encodings: UTF-8 and GBK时，可添两个环境变量：LC_ALL=en_US.UTF-8，LANG=en_US.UTF-8。(在安装ruby成功后添加）&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>eclipse下Egit rebase 步骤</title>
   <link href="http://www.panxw.com/git/egit-rebase-step.html"/>
   <updated>2012-11-26T20:05:01+00:00</updated>
   <id>/git/egit-rebase-step</id>
   <content type="html">&lt;p&gt;1.提交修改文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Team-&amp;gt;commit
``

2.更新仓库文件  

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Team-&amp;gt;Fetch-from-Upstream
```&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;3.Rebase, 修改冲突文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Team-&amp;gt;Rebase,(fix diff)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.修改文件添加至索引&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Team-&amp;gt;Add to index
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5.继续Rebase&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Team-&amp;gt;Rebase-&amp;gt;continue rebase
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;6.Push到服务器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Team-&amp;gt;Push-to-Upstream
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Android 之Parcelable使用例子</title>
   <link href="http://www.panxw.com/android/parcelable-usage.html"/>
   <updated>2012-06-12T20:05:01+00:00</updated>
   <id>/android/parcelable-usage</id>
   <content type="html">&lt;p&gt;关于Android中的Parcelable：&lt;br /&gt;
1.Android推荐实现Parcelable接口而非Seriable接口来实现对象的序列化。&lt;br /&gt;
2.但当Parcelable中含有列表List时，则要求列表中的信息类是Seriable的。&lt;br /&gt;
3.Parcelable接口实现类除了必须实现writeToParcel(Parcel dest, int flags)方法外(describeContents()默认即可)，还需创建一个类型为Parcelable.Creator&amp;lt; T &amp;gt; 名为CREATOR的public静态变量(createFromParcel(Parcel source) 方法也是必须的)。&lt;/p&gt;

&lt;p&gt;Github：&lt;a href=&quot;https://github.com/allthelucky/android-develop-kits/tree/master/ParcelableTest&quot;&gt;https://github.com/allthelucky/android-develop-kits/tree/master/ParcelableTest&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Perst在Android中的简单应用</title>
   <link href="http://www.panxw.com/android/perst-try.html"/>
   <updated>2012-06-05T20:05:01+00:00</updated>
   <id>/android/perst-try</id>
   <content type="html">&lt;p&gt;Perst的介绍文字颇多，但应用例子却不好找。关于Perst的介绍文字大家去Google或百度找吧。测试发现，在大数量（1w及以上）情况下，Perst性能的确远超Sqlite。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;下面讲解一下Perst的简单操作过程，并附上一测试例子。&lt;/p&gt;
&lt;h4 id=&quot;一perst的应用基本步骤&quot;&gt;一、Perst的应用基本步骤：&lt;/h4&gt;
&lt;p&gt;1、建立信息类；&lt;br /&gt;
2、建立索引Root类；&lt;br /&gt;
3、进行数据库操作。&lt;/p&gt;

&lt;h4 id=&quot;二例子android操作例子&quot;&gt;二、例子Android操作例子&lt;/h4&gt;
&lt;p&gt;Github：&lt;a href=&quot;https://github.com/panxw/android-develop-toolkit/tree/master/AndroidPerstTutorial&quot;&gt;https://github.com/panxw/android-develop-toolkit/tree/master/AndroidPerstTutorial&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;三参考文献&quot;&gt;三、参考文献&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;http://www.mcobject.com/perst&quot;&gt;http://www.mcobject.com/perst&lt;/a&gt;
&lt;a href=&quot;http://www.cnblogs.com/zzyyll2/archive/2007/09/07/885149.html&quot;&gt;http://www.cnblogs.com/zzyyll2/archive/2007/09/07/885149.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>synchronized方法、wait/notify与监视器</title>
   <link href="http://www.panxw.com/program/java-wait-notify.html"/>
   <updated>2012-05-29T20:05:01+00:00</updated>
   <id>/program/java-wait-notify</id>
   <content type="html">&lt;p&gt;名词解释：wait等待某个条件发生，而改变这个条件超出了当前方法的控制能力，常由另一个任务来改变。而notify和notifyAll则表示感兴趣的事件发生了，于是唤醒wait之后动作执行。&lt;!-- more --&gt;&lt;br /&gt;
1.synchronized方法调用synchronized方法(同一锁时)，由外向内获取锁，由内向外释放锁。即在synchronized块类调用新的synchronized方法时，新的synchronized方法直接获取锁。&lt;br /&gt;
2.同步代码中执行obj.wait()之后其它线程可获得监视器对象，否则另一个同步代码块就不能执行notify()或notifyAll()方法了。&lt;br /&gt;
3.示例：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Test {
 /**
  * notify通知wait唤醒
  * @param args
  */
 public static void main(String[] args) {
  final Object sync = new Object();
  new Thread(){
   public void run() {
	 synchronized (sync) { //同步块
	  try {
	   sync.wait(5*1000); //处于等待,5s
	   System.out.println(&quot;wait over...&quot;);
	  } catch (Exception e) {
	   System.out.println(&quot;err...&quot;);
	  }
	 }
   }
  }.start();

  try {
   Thread.sleep(4*1000); //通知等待提前1s唤醒
   synchronized (sync) { //同步块
	sync.notify(); 
	System.out.println(&quot;notify...&quot;);
   }
  } catch (InterruptedException e) {
   e.printStackTrace();
  }
 }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>给移动应用开发者的建议</title>
   <link href="http://www.panxw.com/android/app-dev-sugestions.html"/>
   <updated>2012-05-21T20:05:01+00:00</updated>
   <id>/android/app-dev-sugestions</id>
   <content type="html">&lt;p&gt;摘自某ANDROID开发书籍，具体记不清楚了。个人比较认同：&lt;br /&gt;
1,随时记录自己手头的好点子。&lt;br /&gt;
2,并非一个功能完善的应用才能赚钱。&lt;br /&gt;
3,在发布各版本的ahap版本过程中完善功能。&lt;br /&gt;
4,有困难查资料。(Google)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>三层架构是个啥？</title>
   <link href="http://www.panxw.com/program/three-level-arch.html"/>
   <updated>2012-05-01T20:05:01+00:00</updated>
   <id>/program/three-level-arch</id>
   <content type="html">&lt;h4 id=&quot;1软件体系架构中一般分层结构&quot;&gt;1.软件体系架构中，一般分层结构：&lt;/h4&gt;
&lt;p&gt;表示层，业务逻辑层，数据访问层。目的在于提高程序设计及维护效率。&lt;/p&gt;

&lt;h4 id=&quot;2请求过程&quot;&gt;2.请求过程：&lt;/h4&gt;
&lt;p&gt;表示层接收到用户的数据和请求后，传递给业务逻辑层。&lt;br /&gt;
业务逻辑层接收到用户数据和请求后，先对数据和请求验证和审核，验证过后再将数据和请求传递给数据访问层，验证失败则直接将结果返回表示层。&lt;br /&gt;
数据访问层接收到数据和请求后，开始读取或保存数据。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;3反之是响应过程&quot;&gt;3.反之是响应过程：&lt;/h4&gt;
&lt;p&gt;数据访问层读取到用户所需数据，然后传递给业务逻辑层。&lt;br /&gt;
业务逻辑层得到数据后，先对结果进行验证，验证有效则将结果传递给表示层。&lt;br /&gt;
表示层接收到结果后，将结果显示在界面。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>工作DNA警句</title>
   <link href="http://www.panxw.com/read/work-dna.html"/>
   <updated>2012-03-12T20:05:01+00:00</updated>
   <id>/read/work-dna</id>
   <content type="html">&lt;p&gt;在一本名为《工作DNA》的书中写的几方面。我觉得蛮有道理，于是写摘下：&lt;br /&gt;
1,不能只有生存权，更要有发展权。&lt;br /&gt;
2,五大打挑战：父母，生育，升职，工作压力，生活质量。&lt;br /&gt;
3,工作不能只有专业化，还要有职业化。&lt;br /&gt;
4,财富要像滚雪球，人生也是。&lt;br /&gt;
5,职业线路：专注与坚持。&lt;br /&gt;
6,人生大智慧：聪明+善良。&lt;br /&gt;
7,人生不能只有吸引力，更要有影响力。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android startActivityForResult返回时需要注意的</title>
   <link href="http://www.panxw.com/android/result-code.html"/>
   <updated>2012-03-02T20:05:01+00:00</updated>
   <id>/android/result-code</id>
   <content type="html">&lt;p&gt;在onActivityResult中，即便是从后一个页面按back键返回的也是有resultCode的，且其值为0,其data为null.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Spinner自定义适配器</title>
   <link href="http://www.panxw.com/android/custom-spinner.html"/>
   <updated>2011-12-20T20:05:01+00:00</updated>
   <id>/android/custom-spinner</id>
   <content type="html">&lt;p&gt;想让Android的Spinner+Adapter也能像ListView+Adapter那样自由适配任意(信息)列表数据，直接继承ArrayAdapter或BaseAdapter的方法来重写Adapter是不行的，必须实现Android提供的SpinnerAdapter接口来定制Spinner的Adapter才能达到所需效果。&lt;/p&gt;

&lt;p&gt;Github：&lt;a href=&quot;https://github.com/allthelucky/android-develop-kits/tree/master/CustomSpinner&quot;&gt;https://github.com/allthelucky/android-develop-kits/tree/master/CustomSpinner&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>android jni c/c++打印输出</title>
   <link href="http://www.panxw.com/android/android-jin-log.html"/>
   <updated>2011-12-01T20:05:01+00:00</updated>
   <id>/android/android-jin-log</id>
   <content type="html">&lt;h4 id=&quot;一加入头文件&quot;&gt;一、加入头文件：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;android/log.h&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;二声明输出标记&quot;&gt;二、声明输出标记&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#define LOG_TAG &quot;TEST&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;三输出打印信息方法&quot;&gt;三、输出打印信息方法：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;__android_log_print(ANDROID_LOG_INFO, LOG_TAG, &quot;input:a=%d, b=%d&quot;, a,b);
```&amp;lt;!-- more --&amp;gt;

输出级别除ANDROID_LOG_INFO外，还有ANDROID_LOG_DEBUG，ANDROID_LOG_WARN，ANDROID_LOG_ERROR，ANDROID_LOG_VERBOSE等。  

#### 四、编译时Android.mk中加入：
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;LOCAL_LDLIBS := -llog
```&lt;/p&gt;

&lt;h4 id=&quot;五查看&quot;&gt;五、查看&lt;/h4&gt;
&lt;p&gt;Android应用运行时查看输出信息。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android Dialog风格Activity</title>
   <link href="http://www.panxw.com/android/dialog-style-activity.html"/>
   <updated>2011-11-22T20:05:01+00:00</updated>
   <id>/android/dialog-style-activity</id>
   <content type="html">&lt;p&gt;在Manifist文件中，对Activity添加一项theme的属性，值为@android:style/Theme.Dialog就能将Activity以对话框形式显示。例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;activity android:name=&quot;.DialogActivity&quot; android:label=&quot;@string/new_name&quot;android:theme=&quot;@android:style/Theme.Dialog&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Android 点按钮不让AlertDialog退出方法</title>
   <link href="http://www.panxw.com/android/dialog-hold.html"/>
   <updated>2011-11-10T20:05:01+00:00</updated>
   <id>/android/dialog-hold</id>
   <content type="html">&lt;p&gt;在AlertDialog中加入布局后，发现数据验证无论通过与否，点了AlertDialog提供的按钮后总是退出。如何使数据在校验未成功的时候hold住AlertDialog呢？&lt;!-- more --&gt;网友提供了一种可行方法：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;final Builder dialog = new AlertDialog.Builder(mContext);
...
LayoutInflater inflater = LayoutInflater.from(mContext);
View layout = inflater.inflate(R.layout.tsm_person_info, null);
final EditText nameText = (EditText) layout.findViewById(R.id.editText1);
final EditText cardIdText = (EditText) layout.findViewById(R.id.editText2);
final EditText phoneText = (EditText) layout.findViewById(R.id.editText3);
... 
dialog.setView(layout);
dialog.setNeutralButton(&quot;确定&quot;, new DialogInterface.OnClickListener() {
  @Override
 public void onClick(DialogInterface dialog, int which) { 
  String name = nameText.getText().toString().trim();
  String idCard = cardIdText.getText().toString().trim();
  String phone = phoneText.getText().toString().trim();
  if (name.equals(&quot;&quot;) || idCard.equals(&quot;&quot;) || phone.equals(&quot;&quot;)) {
  holdDialog(dialog, false); //校验不通过界面保持
  return;
 }
 holdDialog(dialog, true); //allow exit
 }
});
dialog.setNegativeButton(&quot;取消&quot;, new DialogInterface.OnClickListener() {
 @Override
 public void onClick(DialogInterface dialog, int which) {
  Toast.makeText(mContext, &quot;未进行个人化处理！&quot;, Toast.LENGTH_SHORT).show();
  holdDialog(dialog, true);//allow exit
 }
});
/**
 *界面保持开关
* @param dialog
*/
private void holdDialog(DialogInterface dialog, boolean flag) {
 try {
  Field field = dialog.getClass().getSuperclass().getDeclaredField(&quot;mShowing&quot;);
  field.setAccessible(true);
  field.set(dialog, flag);
 } catch (Exception e) {
  e.printStackTrace();
 }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;参考文章：http://gjican.iteye.com/blog/1130538&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Windows下eclipse中添加NDK Builder</title>
   <link href="http://www.panxw.com/android/eclipse-ndk-build.html"/>
   <updated>2011-10-24T20:05:01+00:00</updated>
   <id>/android/eclipse-ndk-build</id>
   <content type="html">&lt;p&gt;Windows下NDK开发配合eclipse可在安装好cygwin后，添加一个NDK-Builder。&lt;br /&gt;
1.Project-&amp;gt;Properites-&amp;gt;Builder&amp;gt;new新建一个NDK-Builder&lt;br /&gt;
2.在Main下面Location栏输入C:\cygwin\bin\bash.exe, Work Directory栏输入C:\cygwin\bin, Arguments栏输入：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
--login -c &quot;cd /cygdrive/e/android/ndks/jni &amp;amp;&amp;amp; /cygdrive/d/android-sdk-windows/android-ndk-r6b/ndk-build
&lt;/code&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;3.在Refresh下面选上Refresh resources upon completion&lt;/p&gt;

&lt;p&gt;4.Build Options下面设置Run the builder选项为During manual builds及Specify working set of relevant resources&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android EditText控件的密码输入框可见性设置</title>
   <link href="http://www.panxw.com/android/textedit-set-password.html"/>
   <updated>2011-10-22T20:05:01+00:00</updated>
   <id>/android/textedit-set-password</id>
   <content type="html">&lt;p&gt;密码输入框可见性设置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public void showAsPassword(show) {
	if (show) {
	 passEdit.setInputType(0x90);
	} else {
	 passEdit.setInputType(0x81);
	}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Google Map API of Android 的使用</title>
   <link href="http://www.panxw.com/android/google-map-usage.html"/>
   <updated>2011-10-22T20:05:01+00:00</updated>
   <id>/android/google-map-usage</id>
   <content type="html">&lt;p&gt;今天看了Google Map API，发现后来的百度，图吧等出的Android 版地图API都比较相近。使用Google Map API的步骤：&lt;/p&gt;

&lt;h4 id=&quot;1在下面的网址上获取maps-api-key&quot;&gt;1.在下面的网址上获取Maps API Key。&lt;/h4&gt;
&lt;p&gt;申请之前需用到MD5指纹，方法是：WINXP下进入到C:\Documents and Settings\Administrator.android\目录，再执行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;keytool -list -keystore debug.keystore，提示输入密码，就输入android，之后就得到MD5认证纹了。
```&amp;lt;!-- more --&amp;gt;

然后到，http://code.google.com/intl/zh-CN/android/add-ons/google-apis/mapkey.html，申请。  

#### 2.下载Google 提供的Map Api jar包。
方法是，用SDK安装工具，在Third Party Add-ons下载对应版本的API。  

#### 3.使用。
xml布局文件中加入视图：  

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;com.google.android.maps.MapView android:layout_width=&quot;fill_parent&quot; android:layout_height=&quot;fill_parent&quot; android:apiKey=&quot;0vrJE9JtlHLq0_hw2Um76MlEHAkLaFviQMgSNxA&quot; /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
application节点下加入：

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;uses-library android:name=&quot;com.google.android.maps&quot; /&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
manifest下加入：  

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;uses-permission android:name=&quot;android.permission.INTERNET/&quot;&gt;
&lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot; /&gt;
```

#### 4.创建继承MapActivity的类对地图进行控制操作。
在此不多说。  

#### 5.补充一点。
运行地图应用时可能出现类似于：  

```
[2011-08-07 13:13:21 - GMapApp] Installation error: INSTALL_FAILED_MISSING_SHARED_LIBRARY
[2011-08-07 13:13:21 - GMapApp] Please check logcat output for more details.
[2011-08-07 13:13:21 - GMapApp] Launch canceled!
```

运行GOOGLE MAP应用仅添加了maps.jar包是不行的，得使用add-ons版API和add-ons API版模拟器。
&lt;/uses-permission&gt;
</content>
 </entry>
 
 <entry>
   <title>解析错误－解析包时出现问题－解决方法</title>
   <link href="http://www.panxw.com/android/apk-parse-err.html"/>
   <updated>2011-10-22T20:05:01+00:00</updated>
   <id>/android/apk-parse-err</id>
   <content type="html">&lt;p&gt;当使用下列方式安装apk时：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;final String filePath = &quot;/data/data/&quot; + getPackageName() + &quot;/files/&quot; + &quot;test.apk&quot;;
Intent intent = new Intent();
intent.setAction(android.content.Intent.ACTION_VIEW);
intent.setDataAndType(Uri.parse(&quot;file://&quot; + filePath), &quot;application/vnd.android.package-archive&quot;);
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(intent);
```&amp;lt;!-- more --&amp;gt;

报“解析包时出现问题”时，log输出如：  

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...Permision denied
W/zipro   ( 1362): Unable to open zip '/data/data.... ```
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;原因在于，apk临时存放在应用的files或cache目录时，其读写权限有限。&lt;br /&gt;
需要修改其文件权限，Runtime执行”chmod 777 filePath”，或以openFileOutput(“test.apk”, MODE_WORLD_READABLE)创建输出流造成的。&lt;/p&gt;

&lt;p&gt;当然，apk直接创建在SD卡中，也不会有上述错误出现。&lt;/p&gt;

&lt;p&gt;(完~)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android调用系统安装/卸载apk过程</title>
   <link href="http://www.panxw.com/android/android-install-uninstall.html"/>
   <updated>2011-10-22T20:05:01+00:00</updated>
   <id>/android/android-install-uninstall</id>
   <content type="html">&lt;h4 id=&quot;1安装apk&quot;&gt;1、安装apk&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;String dirPath = &quot;/data/data/&quot; + getPackageName() + &quot;/files/test.apk&quot;; //文件需有可读权限  
Intent intent = new Intent();  
intent.setAction(android.content.Intent.ACTION_VIEW);  
intent.setDataAndType(Uri.parse(&quot;file://&quot; + filePath), &quot;application/vnd.android.package-archive&quot;);  
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);  
startActivity(intent);
```&amp;lt;!-- more --&amp;gt;

#### 2、卸载apk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;private void startUninstall(final String pkg) {
	if (!InstallUtils.isApkInstalled(mContext, pkg)) {
		Toast.makeText(mContext, “程序未安装，无需卸载！”, Toast.LENGTH_SHORT).show();
		return;
	} else {
		Uri packageURI = Uri.parse(“package:” + pkg);
		Intent uninstallIntent = new Intent(Intent.ACTION_DELETE, packageURI);
		startActivity(uninstallIntent);
	}
}&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 3、run运行
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Intent to = new Intent();
to.putExtra(“TOP”, “你好，来自上层信息”);
to.setClassName(pkgName, clsName);
to.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
startActivity(to);&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 4、工具
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;InstallUtils.java　public static boolean isApkInstalled(Context context, final String pkgName) {
　try {
	context.getPackageManager().getPackageInfo(pkgName, 0);
	return true;
} catch (NameNotFoundException e) {
	//e.printStackTrace();
}
return false;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 5、将安装的程序AndroidManifest.xml设置入口类为：
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;intent-filter&gt;
	   &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;
	   &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
&lt;/intent-filter&gt;
&lt;p&gt;就不会在桌面出现该应用的启动图标了。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
#### 6、启动任意另一个apk中的任一Activity。 与第5点一样，需在启动的Activity配置Intentfilter：
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;intent-filter&gt;
	   &lt;action android:name=&quot;android.intent.action.VIEW&quot; /&gt;
	   &lt;category android:name=&quot;android.intent.category.DEFAULT&quot; /&gt;
&lt;/intent-filter&gt;
&lt;p&gt;```&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>养气歌</title>
   <link href="http://www.panxw.com/read/body-foster-song.html"/>
   <updated>2011-08-01T20:05:01+00:00</updated>
   <id>/read/body-foster-song</id>
   <content type="html">&lt;h4 id=&quot;养气歌&quot;&gt;养气歌&lt;/h4&gt;
&lt;p&gt;少思虑以养心气，寡色欲以养肾气。&lt;br /&gt;
常运动以养骨气，戒嗔怒以养肝气。&lt;br /&gt;
薄滋味以养胃气，省语言以养神气。&lt;br /&gt;
多读书以养胆气，顺时令以养元气。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>IT Enginner or Code Typist</title>
   <link href="http://www.panxw.com/read/it-engineer-way.html"/>
   <updated>2011-03-01T20:05:01+00:00</updated>
   <id>/read/it-engineer-way</id>
   <content type="html">&lt;p&gt;曾看过这么一句话：“做一个工程师(Enginner or Programdesigner)，而不仅是一个程序工人(Code Typist)”。&lt;/p&gt;

&lt;p&gt;面向对象OO之路：&lt;br /&gt;
1,精通一元语言，如UML。&lt;br /&gt;
2,学习，然后使用设计模式。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>学习方法及过程</title>
   <link href="http://www.panxw.com/read/learn-process.html"/>
   <updated>2011-01-08T20:05:01+00:00</updated>
   <id>/read/learn-process</id>
   <content type="html">&lt;p&gt;书摘，学习方法及过程：&lt;br /&gt;
1,循序渐进，打好基础，由易到难，量力而行。&lt;br /&gt;
2,熟读精思，心到、眼到、口到。&lt;br /&gt;
3,自求自得，主动消化吸收。&lt;br /&gt;
4,博约结合，广博与精研结合，广泛阅读，精读。&lt;br /&gt;
5,知行统一，从实践中学，学以致用。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Web标准设计规范(XHTML+CSS)</title>
   <link href="http://www.panxw.com/web/css-div-standerd.html"/>
   <updated>2010-10-15T20:05:01+00:00</updated>
   <id>/web/css-div-standerd</id>
   <content type="html">&lt;p&gt;以下内容摘自《CSS禅意花园》，www.csszengarden.com。&lt;/p&gt;

&lt;p&gt;1,为使浏览器正确解析及通过CSS检验，所有文档都必须声明它们所使用的编码语言：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=utf-8&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2,用小写书写所有标签，XML对大小写敏感。&lt;!-- more --&gt;&lt;/p&gt;

&lt;p&gt;3,为图片添加有意义的alt属性。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;img src=&quot;logo.png&quot; alt=&quot;websit web logo&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4,关闭所有标签，单标签也应该关闭。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;hr/&amp;gt;
&amp;lt;br/&amp;gt;
&amp;lt;img src=&quot;pic.jpg&quot; alt=&quot;pic&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5,为所有的属性值加引号，HTML中无需，而XHTML中必须加上。&lt;/p&gt;

&lt;p&gt;6,用id属性代替name属性，XHTML中不能使用name属性，应该用id代替。&lt;/p&gt;

&lt;p&gt;7,CSS盒模型.&lt;br /&gt;
一个元素的实际宽度：左边界+左加框+左填充+内容宽度+右填充+右边框+右边界。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Android开发环境搭建 </title>
   <link href="http://www.panxw.com/android/android-env-setup.html"/>
   <updated>2010-10-01T20:05:01+00:00</updated>
   <id>/android/android-env-setup</id>
   <content type="html">&lt;p&gt;几个月前就想试一试Android开发环境，当时觉得麻烦就没有动手。现在闲时把所用文件下载之后安装了一下，原来事实并没有想像中的那样烦琐。&lt;/p&gt;

&lt;h4 id=&quot;1安装jdkjre是不够的&quot;&gt;1.安装JDK，JRE是不够的。&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;
下载jdk-6u21-windows-i586.exe
安装到C:\Program Files\Java\jdk1.6.0_21
添加环境变量JAVA_HOME，值为C:\Program Files\Java\jdk1.6.0_21
环境变量PATH中填添%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;
添加环境变量CLASSPATH，值设为.;%JAVA_HOME%\lib;%JAVA_HOME%\lib\tools.jar
&lt;/code&gt;&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;2下载android-sdk解压&quot;&gt;2.下载Android SDK，解压。&lt;/h4&gt;
&lt;p&gt;解压后Android sdk目录为D:\Androidand\sdk&lt;/p&gt;

&lt;h4 id=&quot;3下载eclipse解压&quot;&gt;3.下载eclipse，解压。&lt;/h4&gt;
&lt;p&gt;解压后eclipse目录为D:\Androidand\eclipse&lt;/p&gt;

&lt;h4 id=&quot;4进入eclipse目录&quot;&gt;4.进入eclipse目录&lt;/h4&gt;
&lt;p&gt;运行eclipse.exe，在Help&amp;gt;Install New Software下添加ADT插件，所用网址http://dl-ssl.google.com/android/eclipse，安装Android Development Tools。&lt;/p&gt;

&lt;h4 id=&quot;5eclipse添加android-sdk路径&quot;&gt;5.eclipse添加Android SDK路径。&lt;/h4&gt;
&lt;p&gt;Windows&amp;gt;Preference&amp;gt;Android&amp;gt;Android SDK设置为D:\Androidand\sdk&lt;br /&gt;
大致就完成了，结下来就可以在eclipse开发Android应用程序了。&lt;/p&gt;

&lt;p&gt;原文：&lt;a href=&quot;http://blog.chinaunix.net/uid-22985736-id-130137.html&quot;&gt;http://blog.chinaunix.net/uid-22985736-id-130137.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Windows XP下uCOS-II开发环境建立</title>
   <link href="http://www.panxw.com/linux/ucos-ii-setup.html"/>
   <updated>2010-06-25T20:05:01+00:00</updated>
   <id>/linux/ucos-ii-setup</id>
   <content type="html">&lt;p&gt;下载所需文件，地址：&lt;a href=&quot;http://pan.baidu.com/s/1i3uXuPB&quot;&gt;http://pan.baidu.com/s/1i3uXuPB&lt;/a&gt;&lt;br /&gt;
1、解压Borland C 4.5完全安装版.rar，然后进入BC45目录，执行INSTALL.EXE安装，选择C盘。&lt;br /&gt;
2、解压tasm.rar中的TASM.EXE，将其COPY到C:\BC45\BIN目录下。&lt;br /&gt;
3、执行uCOS_II.rar中的uCOSV252.exe，选择C盘执行，将在C盘出现SOFTWARE目录。&lt;br /&gt;
4、进入C:\SOFTWARE\uCOS-II，可测试示例程序。&lt;br /&gt;
5、参考示例程序开发自己的应用。&lt;/p&gt;

&lt;p&gt;Windows XP下比较正常，Windows 7下可能不成功。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>2.6内核驱动编译程序所遇问题解</title>
   <link href="http://www.panxw.com/linux/linux-kernel26-faqs.html"/>
   <updated>2010-05-20T20:05:01+00:00</updated>
   <id>/linux/linux-kernel26-faqs</id>
   <content type="html">&lt;h4 id=&quot;一write-ioctl-警告从不兼容的指针类型初始化&quot;&gt;一、write ioctl 警告:从不兼容的指针类型初始化&lt;/h4&gt;
&lt;p&gt;原因在于:write中的char *buf应该为const char *buf；ioctl中的long data为unsigned long data&lt;/p&gt;

&lt;h4 id=&quot;二irqreturn函数中的参数变化&quot;&gt;二、irqreturn函数中的参数变化&lt;/h4&gt;
&lt;p&gt;2.6中的irqreturn函数中只有两个参数了，原来的irqreturn_t int_interrupt(int irq,void * dev_id,struct pt_regs *regs)；应该是irqreturn_t int_interrupt(int irq,void * dev_id)；&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;三26内核高版本中的frags值发生变化&quot;&gt;三、2.6内核高版本中的frags值发生变化&lt;/h4&gt;
&lt;p&gt;原来头文件里没有SA_INTERRUPT了，一般使用IRQF_SHARED了。&lt;br /&gt;
rquest_irq(PRINT_IRQ,int_interrupt,IRQF_SHARED,INT_DEV_NAME,NULL);&lt;/p&gt;

&lt;h4 id=&quot;四中断所需的头文件不同&quot;&gt;四、中断所需的头文件不同&lt;/h4&gt;
&lt;p&gt;2.4内核中中断的注册和注销使用的头文件#include &amp;lt;linux/shed.h&amp;gt;&lt;br /&gt;
2.6内核中中断的注册和注销使用的头文件#include &amp;lt;linux/interrupt.h&amp;gt;&lt;/p&gt;

&lt;h4 id=&quot;五预留主设备号和次设备号&quot;&gt;五、预留主设备号和次设备号&lt;/h4&gt;
&lt;p&gt;1.可用的主设备号范围如下：60~63 120~127 240~254&lt;br /&gt;
2.主设备号10的次设备号中240~255范围也用在测试或特定平台上。&lt;/p&gt;

&lt;h4 id=&quot;六printk函数输出&quot;&gt;六、printk函数输出&lt;/h4&gt;
&lt;p&gt;1输出可标记等级，默认为KERN_WARNNING，等同于下面几句：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;printk(&quot;&amp;lt;4&amp;gt;&quot; &quot;system ok\n&quot;);
printk(&quot;&amp;lt;4&amp;gt; system ok\n&quot;);
printk(&quot;system ok\n&quot;);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.必须使用“\n”字符，否则调试过程混乱。当不使用它时，下一条输出会紧接着前一句，而且会输出标记级别。&lt;br /&gt;
如printk(“hello world”);printk(“goodbye\n”);则输出时为hello world&amp;lt;6&amp;gt;goodbye.&lt;/p&gt;

&lt;h4 id=&quot;七思考&quot;&gt;七、思考？&lt;/h4&gt;
&lt;p&gt;1.为什么普通用户在执行./test的时候，总是提示设备文件打开出错，而用root用户执行./test的时候就成功了呢？&lt;br /&gt;
测试解决了，在root用户下将设备文件访问权限改为666，再就可以了。&lt;br /&gt;
2.一个设备文件，不能同时被两个设备同时使用。先打开的成功，后打开的出错。&lt;/p&gt;

&lt;h4 id=&quot;八交叉编译&quot;&gt;八、交叉编译&lt;/h4&gt;
&lt;p&gt;1解压好2.6.18内核，并修改内核目录inux-2.6.18下的Makefile，更改ARCH,和CROSS_COMPILE值。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ARCH := arm
CROSS_COMPILE := /usr/local/arm/3.4.1/bin/arm-linux-
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;如果没有设置好，在编译驱动的时候将会出错。并且先进行make modules之后再编译驱动.&lt;br /&gt;
2编译好驱动代码后写一个Makefie，注意加上COSS_ARCH变量，其中包含了两个选项，即ARCH,和CROSS_COMPILE&lt;/p&gt;

&lt;h4 id=&quot;九驱动makefile&quot;&gt;九、驱动Makefile&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#Makefile for linux 2.6 kernel
obj-m+=hello.o
KDIR :=/home/ok/kernel/linux-2.6.18
PWD:=$(shell pwd)
#KERNELHEAD := /home/ok/kernel/linux-2.6.18/include，2.6核不用到。
CROSS_ARCH := ARCH=arm CROSS_COMPILE=arm-linux-
default:
   $(MAKE) $(CROSS_ARCH) -C $(KDIR) SUBDIRS=$(PWD) modules
clean:
   rm -rf *.cmd *.o *.mod.c *.ko
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>嵌入式Web服务器boa在ARM平台的移植</title>
   <link href="http://www.panxw.com/linux/boa-arm-porting.html"/>
   <updated>2010-04-08T20:05:01+00:00</updated>
   <id>/linux/boa-arm-porting</id>
   <content type="html">&lt;h4 id=&quot;1下载&quot;&gt;1，下载&lt;/h4&gt;
&lt;p&gt;http://www.boa.org/&lt;/p&gt;

&lt;h4 id=&quot;2解压&quot;&gt;2，解压&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar xzf boa-0.94.13.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;

&lt;h4 id=&quot;3编译&quot;&gt;3，编译&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd boa-0.94.13/src
./configure
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;生成了makefile文件，一定要在src目录下，在boa-0.94.12下执行./src/configure后再make可能出错。 
修改makefile文件，把其中的CC=gcc CPP=gcc -E 改为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CC = arm-linux-gcc  CPP = arm-linux-gcc -E
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;4然后make在这一步用341和332交叉编译器时均出现如下错误&quot;&gt;4，然后make（在这一步用3.4.1和3.3.2交叉编译器时均出现如下错误：&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;util.c: 100: 1: pasting “t” and “-&amp;gt;” does not give a valid preprocessing token make: [util.o] Error1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;换成2.95.3交叉编译器后，编译通过。&lt;br /&gt;
另一种解决办法是把compat.h中的 foo##-&amp;gt;tm_gmtoff的##去掉。&lt;/p&gt;

&lt;h4 id=&quot;5arm-linux-strip-boa-删除调试信息&quot;&gt;5，arm-linux-strip boa 删除调试信息&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp boa /nfs
cp ../boa.conf /nfs
cd ../../html/ &amp;amp;&amp;amp; cp index.htm test.cgi /nfs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;在/nfs下修改boa.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mount -t nfs 192.168.0.60:/nfs /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;6目标板下&quot;&gt;6.目标板下&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir /etc/boa &amp;amp;&amp;amp; cp /mnt/boa.conf /etc/boa/
cp /mnt/boa /bin/
mkdir /var/log/boa（你也可以在/etc/rc.local中加入一行mkdir /var/log/boa，这样在系统启动时自动创建，而不用人工创建，如果想要让boa在系统启动时也自动运行，那就在/etc/rc.local中再加一行/bin/boa吧）
mkdir -p /var/www/cgi-bin &amp;amp;&amp;amp; cd /var/www
cp /nfs/index.html ./
cp /nfs/test.cgi ./
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;7运行boa测试&quot;&gt;7.运行boa，测试&lt;/h4&gt;
&lt;p&gt;网页文件要显示中文需加上:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;注意用utf-8国际通行的。&lt;/p&gt;

&lt;p&gt;Debian下编译出错解决办法：&lt;br /&gt;
http://www.linux521.com/2009/system/200906/5726.html&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Cramfs文件系统的制作</title>
   <link href="http://www.panxw.com/linux/cramfs-build-step.html"/>
   <updated>2010-04-05T20:05:01+00:00</updated>
   <id>/linux/cramfs-build-step</id>
   <content type="html">&lt;p&gt;当我们用Busybox制作好文件系统后，就可以用Cramfs工具制作自己的文件Cramfs文件系统了。&lt;/p&gt;
&lt;h4 id=&quot;一主要步骤&quot;&gt;一、主要步骤&lt;/h4&gt;
&lt;p&gt;1.下载Cramfs，去这个地址：http://sourceforge.net/projects/cramfs/，或&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$wget http://downloads.sourceforge.net/project/cramfs/cramfs/1.1/cramfs-1.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- more --&gt;

&lt;p&gt;2.解压编译&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$tar zxvf cramfs-1.1.tar.gz
$mv cramfs-1.1 cramfs
$cd cramfs
$make
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;到此生成了mkcramfs和cramfsck，分别用于分创建Cramfs文件系统和进行Cramfs文件系统的解释及检查。&lt;/p&gt;

&lt;p&gt;3.制作Cramfs文件系统&lt;br /&gt;
把用Busybox制作好的文件系统目录（rootfs）复制到本目录，然后执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$./mkcramfs rootfs Cramfs.img
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;文件系统镜像Cramfs.img就可以烧写到目标板了。&lt;br /&gt;
对于Jffs文件系统则类似的用mkfs.jffs2工具制作，Yaffs文件系统则需从网站：http://www.aleph1.co.uk/cgi-bin/viewcvs.cgi/下载，并配置内核，在fs中入对yaffs2编译选项，添加分区等。&lt;/p&gt;

&lt;h4 id=&quot;二内核选项&quot;&gt;二、内核选项&lt;/h4&gt;
&lt;p&gt;1.内核配置的时候要加入对Cramfs的支持。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Memory Technology Device (MTD) support[Y/m/n/?] Y 内存技术设备支持  
MTD partitioning support [Y/m/n/?] Y 支持MTD分区  
Direct char device access to MTD devices [Y/m/n/?] Y MTD字符设备直接访问  
Caching block device access to MTD device [Y/m/n/?] Y MTD块设备缓冲访问  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.File System中配置&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Compressed ROM file support [Y/m/n/?] Y ROM文件系统支持。  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Widows下PXA270开发板的Linux系统的移植过程</title>
   <link href="http://www.panxw.com/linux/px270-arm-porting.html"/>
   <updated>2010-03-20T20:05:01+00:00</updated>
   <id>/linux/px270-arm-porting</id>
   <content type="html">&lt;p&gt;详见：&lt;a href=&quot;http://blog.chinaunix.net/uid-22985736-id-130069.html&quot;&gt;http://blog.chinaunix.net/uid-22985736-id-130069.html&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>NFS挂载记事</title>
   <link href="http://www.panxw.com/linux/nfs-mount-fag.html"/>
   <updated>2010-03-02T20:05:01+00:00</updated>
   <id>/linux/nfs-mount-fag</id>
   <content type="html">&lt;h4 id=&quot;问题&quot;&gt;问题：&lt;/h4&gt;
&lt;p&gt;虚拟机下因为网路不通未能挂上(以前好像可以，现在见鬼了挂不上了)，只好在全LINUX尝试了。当网络可以相互PING通了，进行以下操作：&lt;br /&gt;
1,设置/etc/exports，添加 /dir/ domain(rw,async,no_root_squash)。&lt;br /&gt;
2,然后关掉iptables，再开rpcbind(2.4内核中为portmap)，再开nfs服务。&lt;br /&gt;
3,注意，rpcbind必须在nfs之前开启，最后再在目标机上挂载吧。&lt;br /&gt;
4,挂载 mount -t nfs IP:/dir /mnt，将/dir目录挂载到/mnt，然后 cd /mnt 就可以看到/dir目录下的文件了。&lt;/p&gt;

&lt;h4 id=&quot;一点感悟&quot;&gt;一点感悟&lt;/h4&gt;
&lt;p&gt;在全Linux下你的技术才会进展得快，Windows下虽然可以用虚拟机来使用Linux，开了Windows多半就用不上几下Linux又回Windows下了，要想翻过院墙，先把帽子扔过去吧，这样才你会全力以赴。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>人生什么更重要？</title>
   <link href="http://www.panxw.com/read/which-more-important.html"/>
   <updated>2010-01-01T20:05:01+00:00</updated>
   <id>/read/which-more-important</id>
   <content type="html">&lt;h4 id=&quot;哪个更重要&quot;&gt;哪个更重要？&lt;/h4&gt;
&lt;p&gt;方向比努力重要，&lt;br /&gt;
身体比金钱重要，&lt;br /&gt;
生活比文凭重要，&lt;br /&gt;
情商比智商重要，&lt;br /&gt;
能力比知识重要，&lt;br /&gt;
行动比（愿望）空想重要。&lt;!-- more --&gt;&lt;/p&gt;

&lt;h4 id=&quot;一生最重要的7项资产&quot;&gt;一生最重要的7项资产&lt;/h4&gt;
&lt;p&gt;1，健康：人类的第一资产，&lt;br /&gt;
2，财富：资产的最重要诠释，&lt;br /&gt;
3，智慧：改变命运的资本，&lt;br /&gt;
4，婚姻与家庭：身心的避风港，&lt;br /&gt;
5，心灵：深查世界的棱镜，&lt;br /&gt;
6，友谊：一生快乐源泉，&lt;br /&gt;
7，人生的意义：成长的源动力。&lt;/p&gt;

&lt;h4 id=&quot;人生四句话&quot;&gt;人生四句话&lt;/h4&gt;
&lt;p&gt;把自己当成别人（痛苦），&lt;br /&gt;
把别人当成自己（同情），&lt;br /&gt;
把别人当成别人（尊重），&lt;br /&gt;
把自己当成自己（走自己的路）。&lt;/p&gt;
</content>
 </entry>
 
 
</feed>